=============================
CONFIGURAÇÕES INICIAIS
============================
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

1 - Criar um projeto com o Laravel:
    composer create-project --prefer-dist laravel/laravel sedes-rest-popular "8.5"

2 - Criar o arquivo .env (caso não exista) a partir do arquivo .env.exemple com o comando abaixo
    a) na raiz do projeto, executar o comando: cp .env.exemple ./.env

3 - Gerar uma chave para o app (projeto), caso não tenha sido criada automaticamente na criação do projeto laravel
    a) php artisan key:generate

4 - Configurar tradução
    a) obter arquivo de configuração em: https://github.com/Upinside/laravel-pt-BR
    b) criar pasta resources/lang/pt-BR
    c) descompactar o arquivo obtido na pasta criada acima
    d) no arquivo config/app.php, alterar a propriedade 'locale' para 'locale' => 'pt-br'

5 - No arquivo config/app.php, alterar a propriedade 'timezone' para 'timezone' => 'America/Sao_Paulo'

6 - Criar o banco de dados no MySQL ou Postgres (conforme necessidade) com a colation utf8mb4,
    (mais precisamente utf8mb4-unicode-ci)

7 - No arquivo App/Providers/AppServiceProvider.php acrescentar as linhas abaixo, para efeito de reconhecimento da
    collation do banco de dados utf8mb4 acima, no passo 6. A collationo utf8mb4_unicode_ci é para poder gravar
    caracteres de emojs caso haja necessidade no banco de dados
    a) importar: use Illuminate\Support\Facades\Schema
    b) public function resgister(){
          Schema::defaultStringLength(191);
       }

8 - Criar uma chave no arquivo .env, como se segue, para indicar o sistema para upload de arquivos, quando necessário
    a) FILESYSTEM_DRIVER=public

9 - Configurar as credenciais do banco de dados no arquivo .env, conforme necessário
    DB_HOST=127.0.0.1
    DB_PORT=3306
    DB_DATABASE=nome_do_banco
    DB_USERNAME=your_username
    DB_PASSWORD=your_password

10 - Crie as tabelas da pasta: database/migrations no banco de dados, para verificar se a conexão está Ok. Uma vez
     criada as tabelas de forma satisfatória, exclua-as novamente do banco de dados.
     Crie as tabelas, com o comando abaixo:
     php artisan migrate

11 - Caso sinta necessidade, só se for necessário, altere o namespace da sua aplicação com o comando:
     a) php artisan app:name Setres

12 - Executar e Parar execução do site com os comandos abaixo em uma janela de terminal dentro da pasta do projeto
     php artisan serve
     fuser -k -n tcp 8000 ou fuser -k -n tcp 8001 (8000 e 8001 são as portas alocadas pelo servidor interno do artisan)

13 - Criar uma branch, Alterar para branch criada, verificar em qual branch se encontra no momento
     git branch develop (cria uma branch)
     git switch develop (muda da branch atual para a branch develop)
     git branch (lista as branchs e sinaliza com o * a branch atualmente em uso)


==========================================================
FONTES AWESOME PARA COLOCAR NO PROJETO COM ESTE TEMPLATE
=========================================================
https://fontawesome.com/v5/search?o=r&m=free
https://fontawesome.com/v5/docs/web/style/size
https://www.online-toolz.com/tools/character-map.php
versão do bootstrap: Bootstrap v4.5.3
para aumentar o tamanho dos ícones utilize as classes
To increase icon sizes relative to their container, use the fa-lg (33% increase), fa-2x , fa-3x , fa-4x , or fa-5x classes
Exemplo:
    <b><i class="mr-2 fa-lg fas fa-check text-success"></i></b>

================================
VERSÃO DO CHARTJS MOCADO: 2.9.4

VERSÃO DO CHARTJS CDN em: https://cdnjs.com/libraries/Chart.js/3.9.1
https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js
===============================


==================================
ALTERAÇÃO NA EXIBIÇÃO DOS GRÁFICOS
==================================
arquivo: /home/marcio/projetoslaravel/sedes-rest-popular/public/template/css/sb-admin-2.min.css
classes:
.chart-area {
  position: relative;
  height: 5rem;
  width: 100%;
}

@media (min-width: 768px) {
  .chart-area {
    height: 20rem; ALTERAR PARA height: 27rem
  }
}

.chart-bar {
  position: relative;
  height: 10rem;
  width: 100%;
}

@media (min-width: 768px) {
  .chart-bar {
    height: 20rem; ALTERAR PARA height: 27rem
  }
}

.chart-pie {
  position: relative;
  height: 15rem;
  width: 100%;
}

@media (min-width: 768px) {
  .chart-pie {
    height: calc(20rem - 43px) !important; ALTERAR PARA calc(27rem - 43px)
  }
}


===========================
ALTERANDO A IMAGEM DO LOGIN
===========================
1 - Copiar o arquivo de imagem logo-ma.png para a pasta:
    /home/marcio/ProjetosLaravel/sedes-rest-popular/public/template/img/logo-ma.png
2 - No arquivo: /home/marcio/ProjetosLaravel/sedes-rest-popular/public/template/css/sb-admin-2.min.css alterar os seletores conforme necessidade:
    ORIGINAL: {background:url(../img/capa_restaurant.svg);background-position:center;background-size:400px 600px;background-repeat:no-repeat;background-color:var(--purple); }
    ALTERADO: {background:url(../img/logo-ma.png);background-position:center;background-size:400px 150px;background-repeat:no-repeat;background-color:var(--purple); }



===============================
RESOLVENDO PROBLEMA DO GROUP BY
==============================
Mensagem:
Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column
'returntr_prod.tbl_customer_pod_uploads.id' which is not functionally dependent on columns in GROUP BY clause;
this is incompatible with sql_mode=only_full_group_by
Site de Referência:
https://stackoverflow.com/questions/41887460/select-list-is-not-in-group-by-clause-and-contains-nonaggregated-column-inc

 1 - No phpMyadmin, clicar no ícone "novo" para criar novo banco de dados
 2 - Na aba Variaveis (ou, Mais/Variáveis) rolar a tela para baixo até encontrar a variável "sql mode"
 3 - Clicque no ícone editar e retire do ínicio da caixa de texto que se abir a opção: ONLY_FULL_GROUP_BY,
 4 - Salve a alteração efetuada



=============================
CRIAÇÃO MÓDULO DE LOGIN
=============================

1 - Criar/Alterar migrations de User com campos conforme necessário
2 - Executar Migration
    a) php artisan migrate

3 - Criar controller de User
    a) php artisan make:controller Admin/UserController -r (cria o controller com todos os resources na pasta app/Http/Controllers/Admin)

4 - Criar requests User e definir as regras de validação.
    a) php artisan make:request UserCreateRequest. Alterar o retorno do método authorize desta request para true.
    b) php artisan make:request UserUpdateRequest. Alterar o retorno do método authorize desta request para true
    c) Importar os respectivos requests criados e utilizá-los nos respectivos métodos create e update do controller User.


5 - Criar rotas conforme necessário do tipo resource. Utilizar middleware também conforme necessário.
    a) use App\Http\Controllers\Admin\UserController;
    b) Route::resource('user', UserController::class);

6 - Criar view index.blade.php para listar usuários usuário;
7 - Implementar método index do UserCortroller para exibir view index.blade.php, não esquecer de importar modelo User
    a) use App\Models\User;
    b) $users = User::all();
       return view('admin.user.index', compact('users'));


==================================
CRIAÇÃO DE UM MÓDULO GENÉRICO
==================================

1 - Criar MIGRATIONS do recurso com os campos e seus tipos, bem como seus relacionamentos com outras tabelas, conforme necessário
    a php artisan make:migration create_recursos_table (obs: coloque o nome do recurso no plural)

2 - Criar o model do recurso
    a) php artisan make:model Recurso (obs: colocar o nome do model no singular com a primeira letra em maiúscula)
    b) definir os campos a serem preenchidos na propriedade protected $fillable = [], para serem preenchido em massa
    c) definir os relacionametos conforme necessário e quando preciso

3 - Executar a migration
    a) php artisan migrate

4 - Cirar as Requests (para create e update) para o recurso criado, e definir suas validações, conforme necessário
    a) php artisan make:request RecursoCreateRequest
    b) php artisan make:request RecursoUpdateRequest

5 - Criar o controller do Recurso e definir seus métodos conforme necessário, bem como importar classes necessárias
    a) php artisan make:controller Admin/RecusoController --resource (obs: o parâmetro --resource, criar todos os métodos de um CRUD automaticamente)
    b) use App\Models\Recurso;
       use Illuminate\Support\Facades\DB;
       use App\Http\Requests\RecursoCreateRequest;
       use App\Http\Requests\RecursoUpdateRequest;
       use Illuminate\Support\Facades\Validator;
       use Illuminate\Validation\Rule;

6 - Crie a(s) rota(s) do recurso, conforme necessário
    a) use App\Http\Controllers\Admin\BairroController;
    b) Route::prefix('admin')->name('admin.')->group(function() {
          Route::resource('user', RecursoController::class);
       )}
    c) Quando necessário, acrescente o middleware se preciso for
           b) Route::prefix('admin')->name('admin.')->group(function() {
          Route::resource('user', RecursoController::class)->middleware(['auth']);
       )}

7 - Referenciar a rota do recurso no menu de navegação pelo seu nome (->name) conforme como nomeado no arquivo de rotas,
    quando for o caso

8 - Cirar as views (index.blade, create.blade, edit.blade, show.blade, outras.blade) conforme necessário





=======================
COMANDOS git
=======================
obs: Eu tenho que está dentro da mesma "branch" (master) para a qual eu desejo commitar minhas alterações como abaixo
     git add .
     git commit -m "Descrição do commit"
     git push orign master

git branch develop (cria a branch develop)
git switch master (muda para a branch master)
git switch develop (muda para a branch develop)
git reset --soft HEAD~  (Desfaz o último commit na minha máquina)
git restore --staged .  (Desmarca todos os arquivos a serem comitados, tornando-os vermelhos novamente)



=========================
EXTRAS
=========================
1 - Site de Ícones: https://fontawesome.com/v4.7/icons/
2 - Site de imagens de capas svg: https://undraw.co/
3 - Referência para cards no bootstrap: https://getbootstrap.com/docs/4.0/components/card/

=======================
RELACIONAMENTOS
======================
1 - Um para Um
2 - Relação entre Imovel e Endereco
3 - Um imóvel hasOne(Endereco)
4 - Um endereco belongsTo(Imovel). A chave estrangeira fica no modelo endereço

5 - Um para Muitos
6 - o Dono do relacionamento, NÃO possui chave estrageira, então ele é do tipo: hasMany
7 - O inverso, ou seja, quem possui a chave estrangeira é do tipo belongsTo


==================================
BIBLIOTECA PARA GERAR CSV E EXCEL
==================================
1 - Sites de referência:
        https://laravel-excel.com/
        https://dev.to/ellis22/laravel-export-in-excel-and-csv-example-24ma?utm_source=pocket_reader
2 - Baixar a biblioteca a partir da pasta raiz do seu projeto
        composer require maatwebsite/excel
3 - Registar em config/app.php na propriedade provider e alias
        'providers' => [
   	        \Maatwebsite\Excel\ExcelServiceProvider::class,
        ]

        'aliases' => [
   	        'Excel' => \Maatwebsite\Excel\Facades\Excel::class,
        ]
4 - Publicar o service provider através do comando abaixo, irá criar o arquivo: config/exel.php
        php artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider" --tag=config
5 - Gerar o(s) arquivo(s) de exportação na pasta app/Exports (que será criada automaticamente)
        php artisan make:export BigtabledatasExport --model=Bigtabledata
6 - Crie um método no Controller correspondente ao arquivo de Export gerado anteriormente
        No caso concreto, iremos criar o método no controller DashboardController.php.
        Poderia ser nos controles:  UserController, MunicípioController, RestauranteController, etc...
        Não esquecer de importar as classes necessárias no início do Controller
        <?php

            namespace App\Http\Controllers;

            use App\Exports\BigtabledatasExport;
            use Maatwebsite\Excel\Facades\Excel;

            class DashboardController extends Controller
            {
                public function exportarexcel()
                {
                    return Excel::download(new BigtabledatasExport, 'dadoscompra.xlsx');
                }
            }
7 - Criar rota para referenciar o método: exportarexcel()
        Route::get('admin/dashboard/gerarexcel', [DashboardController::class, 'gerarexcel'])->name('admin.dashboard.gerarexcel')->middleware(['auth']);
8 - Criar o link no arquivo de View para referenciar a rota criada acima:
        <a href="{{route('admin.dashboard.gerarexcel')}}">Gerar Excel</a>

9 - OBS: Até o passo anterior(8), a geração do arquivo excel está plenamente funcional, ou seja, gera um arquivo excel
    com todos os dados da tabela bigtable_data(sem linha de cabeçalho) através da invocação do método abaixo no arquivo: app/Exports/BigtabledatasExport.php
        public function collection()
        {
            // Retorna todos os dados(campos) da Model Bigtabledata sem a necessidade de criar um método específico.
            // Esta é a forma default de utilização
            return Bigtabledata::all();
        }

10- Testar a execução do novo recurso, a partir daqui, clicando no link criado acima.

11- Se for necessário selecionar campos específicos com critérios específicos, é necessário criar um método stático(getBigtabledatasExcel) no model
    Bigtabledata e invocá-lo no return da collect, ou seja, substitua o conteúdo do método collection() como abaixo:
        public function collection()
        {
            // Retorna os dados(campos) consultados no método getBigtabledatas criado no model Bigtabledata
            return collect(Bigtabledata::getBigtabledatasExcel());
        }
12- Para criar a linha de cabeçalho da planilha, na classe: BigtabledatasExport.php
    a) importe a classe:
        use Maatwebsite\Excel\Concerns\WithHeadings;
    b) referencie sua implementação:
        class BigtabledatasExport implements FromCollection, WithHeadings
    c) implemente o método:
        public function headings():array{
            return[
                'ID', 'ID COMPRA', 'ID PRODUTO', etc...
            ];
        }

    SEQUÊNCIA FINAL DA UTILIZAÇÃO DA CLASSE MAATWEBSITE/EXCEL SEM A PASSAGEM DE PARÂMETROS
    --------------------------------------------------------------------------------------

    A) No arquivo: routes/web.php
        Route::get('admin/dashboard/gerarexcel', [DashboardController::class, 'gerarexcel'])->name('admin.dashboard.gerarexcel')->middleware(['auth']);

    B) No arquivo: app/Http/Controllers/Admin/DashboardController.php
        ...
        use App\Exports\BigtabledatasExport;
        use Maatwebsite\Excel\Facades\Excel;

        public function gerarexcel()
        {
            return Excel::download(new BigtabledatasExport(), 'dadoscompra.xlsx');
        }

    C) No arquivo: app/Exports/BigtabledatasExport.php
        <?php

            namespace App\Exports;

            use App\Models\Bigtabledata;
            use Maatwebsite\Excel\Concerns\FromCollection;
            use Maatwebsite\Excel\Concerns\WithHeadings;

            class BigtabledatasExport implements FromCollection, WithHeadings
            {
                public function headings():array{
                    return[
                        'ID', 'ID COMPRA', 'ID PRODUTO', 'QUANTIDADE', 'MEDIDA', 'PREÇO', 'AF', 'TOTAL', 'NOME PRODUTO', 'MEDIDA', 'DATA INICIAL'
                    ];
                }

                public function collection()
                {
                    // Retorna todos os dados(campos) da Model Bigtabledata sem a necessidade de criar um método específico. Este é a forma default de utilização
                    // return Bigtabledata::all();

                    // Retorna os dados(campos) consultados no método getBigtabledatas criado no model Bigtabledata
                    return collect(Bigtabledata::getBigtabledatasExcel());
                }
            }

    D) No arquivo: app/Models/Bigtabledata.php
        // relatorio excel
        public static function getBigtabledatasExcel(){
            $records = DB::table('bigtable_data')->select('id', 'compra_id', 'produto_id', 'quantidade', 'medida_id', 'preco', 'af', 'precototal', 'produto_nome', 'medida_nome', 'data_ini')->get()->toArray();
            return $records;
        }

    E) No arquivo: resources/views/admin/dashboard/index.blade.php
        <a class="btn btn-primary btn-success form-control col-form-label-sm" href="{{route('admin.dashboard.gerarexcel')}}" role="button"   title="gerar excel">
            <i class="far fa-file-excel"></i>
            <b>Gerar Excel</b>
        </a>


    SEQUÊNCIA FINAL DA UTILIZAÇÃO DA CLASSE MAATWEBSITE/EXCEL COM A PASSAGEM DE PARÂMETROS
    --------------------------------------------------------------------------------------

    A') No arquivo: routes/web.php
    Route::get('admin/dashboard/gerarexcel', [DashboardController::class, 'gerarexcel'])->name('admin.dashboard.gerarexcel')->middleware(['auth']);

    B') No arquivo: app/Http/Controllers/Admin/DashboardController.php
        ...
        use App\Exports\BigtabledatasExport;
        use Maatwebsite\Excel\Facades\Excel;

        public function gerarexcel(Request $request)
        {
            $mes = $request->mesexcel;
            $ano = $request->anoexcel;

            return Excel::download(new BigtabledatasExport($mes, $ano), 'dadoscompra.xlsx');
        }

    C') No arquivo: app/Exports/BigtabledatasExport.php
        <?php

            namespace App\Exports;

            use App\Models\Bigtabledata;
            use Maatwebsite\Excel\Concerns\FromCollection;
            use Maatwebsite\Excel\Concerns\WithHeadings;

            class BigtabledatasExport implements FromCollection, WithHeadings
            {
                protected $mes;
                protected $ano;

                public function __construct($mesrelatorio, $anorelatorio)
                {
                    $this->mes = $mesrelatorio;
                    $this->ano = $anorelatorio;
                }

                public function headings():array{
                    return[
                        'ID', 'ID COMPRA', 'ID PRODUTO', 'QUANTIDADE', 'MEDIDA', 'PREÇO', 'AF', 'TOTAL', 'NOME PRODUTO', 'MEDIDA', 'DATA INICIAL'
                    ];
                }

                public function collection()
                {
                    // Retorna todos os dados(campos) da Model Bigtabledata sem a necessidade de criar um método específico. Este é a forma default de utilização
                    // return Bigtabledata::all();

                    // Retorna os dados(campos) consultados no método getBigtabledatas criado no model Bigtabledata
                    return collect(Bigtabledata::getBigtabledatasExcel($this->mes, $this->ano));
                }
            }

    D') No arquivo: app/Models/Bigtabledata.php
        // relatorio excel
        public static function getBigtabledatasExcel($mes, $ano){
            $records = DB::table('bigtable_data')->select('id', 'compra_id', 'produto_id', 'quantidade', 'medida_id', 'preco', 'af', 'precototal', 'produto_nome', 'medida_nome', 'data_ini')->whereMonth('data_ini', $mes)->whereYear('data_ini', $ano)->get()->toArray();
            return $records;
        }

    E') No arquivo: resources/views/admin/dashboard/index.blade.php
        <form action="{{route('admin.dashboard.gerarexcel')}}"  method="GET" class="form-inline" style="width: 500px; margin-left: 237px;">

            <select id="selectMesExcel" name="mesexcel"  class="form-control col-form-label-sm">
                <option value="" selected disabled>Mês...</option>
                @foreach($mesespesquisa as $key => $value)
                    <option value="{{ $key }}" {{date('n') == $key ? 'selected' : ''}} data-mespesquisa="{{$key}}" class="optionMesPesquisa"> {{ $value }} </option>
                @endforeach
            </select>

            <select id="selectAnoExecel"  name="anoexcel" class="form-control col-form-label-sm">
                <option value="" selected disabled>Ano...</option>
                @foreach($anospesquisa as $value)
                    <option value="{{ $value }}" {{date('Y') == $value ? 'selected' : ''}} data-anopesquisa="{{$value}}" class="optionAnoPesquisa"> {{ $value }} </option>
                @endforeach
            </select>

            <button type="submit" class="mb-2 btn btn-success btn-sm form-control col-form-label-sm" style="margin-top: 8px;">
                <i class="far fa-file-excel"></i>
                <b>Gerar Excel</b>
            </button>
        </form>


    SEQUÊNCIA FINAL DA UTILIZAÇÃO DA CLASSE MAATWEBSITE/EXCEL COM A PASSAGEM DE PARÂMETROS E UTILIZAÇÃO DA CLASSE FromQuery e Exportable;
    -------------------------------------------------------------------------------------------------------------------------------------
    A') Em um único arquivo (app/Exports/BigtabledatasExport.php)

    <?php

        namespace App\Exports;

        use App\Models\Bigtabledata;
        use Maatwebsite\Excel\Concerns\FromQuery;
        use Maatwebsite\Excel\Concerns\Exportable;
        use Illuminate\Support\Facades\DB;

        use Maatwebsite\Excel\Concerns\WithHeadings;        // Criar cabeçalho
        use Maatwebsite\Excel\Concerns\ShouldAutoSize;      // Define o autosizing das colunas


        class BigtabledatasExport implements FromQuery, WithHeadings, ShouldAutoSize
        {
            use Exportable;

            protected $mes;
            protected $ano;

            public function __construct($mesrelatorio, $anorelatorio)
            {
                $this->mes = $mesrelatorio;
                $this->ano = $anorelatorio;
            }

            // Definindo a linha de cabeçalho da planilha e csv (nessecário importar: WithHeadings)
            public function headings():array{
                return[
                    'REGISTRO',
                    'REGIONAL',
                    'MUNICÍPIO',
                    'RESTAURANTE',
                    'AF',
                    'Nº COMPRA',
                    'CATEGORIA',
                    'PRODUTO',
                    'DETALHE',
                    'QUANTIDADE',
                    'MEDIDA NOME',
                    'MEDIDA SÍMBOLO',
                    'PREÇO',
                    'TOTAL',
                    'SEMANA',
                    'DATA INICIAL',
                    'MÊS INICIO',
                    'ANO INICIO',
                    'DATA FINAL',
                    'MÊS FIM',
                    'ANO FIM',
                    'EMPRESA',
                    'NUTRICIONISTA EMPRESA',
                    'CPF NUTRI EMPRESA',
                    'CRN NUTRI EMPRESA',
                    'NUTRICIONISTA SEDES',
                    'CPF NUTRI SEDES',
                    'CRN NUTRI SEDES',
                    'CRIADO',
                    'ATUALIZADO'
                ];
            }

            public function query()
            {
                if($this->mes == 0){
                    $records = DB::table('bigtable_data')->selectRaw('id, regional_nome, municipio_nome, identificacao, af, compra_id, categoria_nome, produto_nome, detalhe, quantidade, medida_nome, medida_simbolo, preco, precototal, semana_nome, DATE_FORMAT(data_ini,"%d/%m/%Y"), MONTH(data_ini) AS mes_ini, YEAR(data_ini) AS ano_ini, DATE_FORMAT(data_fin,"%d/%m/%Y"), MONTH(data_fin) AS mes_fin, YEAR(data_fin) AS ano_fin, nomefantasia, nutricionista_nomecompleto, nutricionista_cpf, nutricionista_crn, user_nomecompleto, user_cpf, user_crn, DATE_FORMAT(created_at,"%d/%m/%Y %H:%i"), DATE_FORMAT(updated_at,"%d/%m/%Y %H:%i")')->whereYear('data_ini', $this->ano)->orderBy('id');
                }else{
                    $records = DB::table('bigtable_data')->selectRaw('id, regional_nome, municipio_nome, identificacao, af, compra_id, categoria_nome, produto_nome, detalhe, quantidade, medida_nome, medida_simbolo, preco, precototal, semana_nome, DATE_FORMAT(data_ini,"%d/%m/%Y"), MONTH(data_ini) AS mes_ini, YEAR(data_ini) AS ano_ini, DATE_FORMAT(data_fin,"%d/%m/%Y"), MONTH(data_fin) AS mes_fin, YEAR(data_fin) AS ano_fin, nomefantasia, nutricionista_nomecompleto, nutricionista_cpf, nutricionista_crn, user_nomecompleto, user_cpf, user_crn, DATE_FORMAT(created_at,"%d/%m/%Y %H:%i"), DATE_FORMAT(updated_at,"%d/%m/%Y %H:%i")')->whereMonth('data_ini', $this->mes)->whereYear('data_ini', $this->ano)->orderBy('id');
                }

                return $records;

            }
        }




======================================================================================================
SEQUÊNCIA DE ATUALIZAÇÃO NO SERVIDOR COM DOCKER PARA ATUALIZAÇÃO COM MAATWEBSITE EXCEL FEITA POR DIEGO
======================================================================================================
Só para que eu não esqueça na hora de subir na produção
precisei mudar umas coisas


RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip && \

    # Install PHP extensions
    docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd sockets intl zip && \


0BS: Com as alterações acima o plugin maatwebsite Excel funcionou muito bem, mas causou problemas (500|Server Erro) na geração dos relatórios .pdf com MPDF
     que funcionava perfeitamente. O Diego ajustou a seguinte configuração abaixo:
     Diego: "...é um dos plugins que você usa, ele trabalha na pasta do vendor. para não esquecer quando for fazer na produção."
     Ajuste: chown -R www-data:www-data vendor/mpdf

    Com o novo ajuste acima, TODOS OS RELATÓRIOS: EXCEL, CSV e PDF VOLTARAM A FUNCIONAR PERFEITAMENTE.


==========================================
SEQUÊNCIA DE COMANDOS PARA CRIAR RECURSOS
==========================================

php artisan make:migration create_medidas_table
php artisan migrate
php artisan make:model Medida
php artisan make:controller Admin/MedidaController

php artisan make:request MedidaCreateRequest
php artisan make:request MedidaUpdateRequest


=========================================================================
CONFIGURAÇÃO DA PÁGINA INICIAL DE LOGIN DA APLICAÇÃO SETRES-AUX-CATADORES
=========================================================================
1 - No arquivo routes/web.php tem o trecho de código a abaixo, significando que ao digitar a url raiz ('/') o
    usuário será redirecionado para a rota nomeada: admin.residuo.index, que faz parte do grupo de rotas protegidas
    pelo middleware auth, conforme o segundo trecho de código descrito abaixo
    middleware auth conforme o segundo de trecho de código abaixo
    método index.

    Route::get('/', function () {
        return redirect()->route('admin.residuo.index');
    });



    Route::prefix('admin')->name('admin.')->group(function() {
        Route::resource('residuo', ResiduoController::class)->middleware(['auth']);

2 - Uma vez que a rota nomeada acima está protegida pelo middleware auth, ou seja, o usuárido terá que está autenticado
    para acessar essa rota e na primeira vez que acessar o site através da url ('/') não está autenticado, o mesmo será
    redirecionado para a rota front.login, configurada no arquivo: .../app/Http/Middleware/Authenticate.php

    /**
     * Get the path the user should be redirected to when they are not authenticated.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return string|null
     */
    protected function redirectTo($request)
    {
        if (! $request->expectsJson()) {
            return route('front.login');
        }
    }

3 - Obs: No trecho de código abaixo, o mesmo poderia ser substituido pelo que se segue tranquilamente:

    Route::get('/', function () {
        return redirect()->route('admin.residuo.index');
    });

    Route::get('/', function () {
        return redirect()->route('front.login');
    });










==================
OPERADOR TERNÁRIO
==================
No Laravel não é possível executar um operador ternário com mais de um nivel confome exemplos descritos abaixo:
É possível    : name="perfil" value="{{ $user->perfil == 'adm' ? 'Administrador' : 'Nutricionista' }}"
Não é possível: name="perfil" value="{{ $user->perfil == 'adm' ? 'Administrador' : $user->perfil == 'nut' ? 'Nutricionista' : 'Inativo' }}"


=======================
CRIANDO MÓDULO DE LOGIN
=======================
1 - Alterar migration users (create_users_table), acrescentando campos come relacionamentos necessários

2 - Rodar a migration users depois de alterada
    php artisan migrate

3 - Alterar model Users identificando os campos a serem preenchidos e definindo os relacionamentos
    hasOne, hasMany, belongsTo etc... quando necessário

4 - Criar controler Acesso
    php artisan make:controller AcessoController

5 - Importar as classes como abaixo:
    use Illuminate\Support\Facades\Auth;
    use App\Models\User;

6 - Criar os métodos: login(), check() e logout() como descritos abaixo:
     public function login()
     {
        /*
        cria um usuário no banco para fins de teste logo no primeiro acesso. Depois de criar o usuário, comente este trecho de código
        $user = new User; $user->nomecompleto = "Administrador Mater"; $user->cpf = '000.000.000-00'; $user->crn = '000000';
                $user->telefone = '(98) 00000-0000'; $user->name = 'Administrador'; $user->email = 'marcio@sedes.com';
                $user->perfil = 'adm'; $user->password = bcrypt('123456'); $user->municipio_id = 1;
        $user->save();
        */

        return view('acessologin');
    }

    public function check(Request $request)
    {
        if(!filter_var($request->email, FILTER_VALIDATE_EMAIL)){
            return redirect()->back()->withInput()->withErrors(['O email não é válido!']);
        }

        $credentials = [
            'email' => $request->email,
            'password' => $request->password
        ];

        if(Auth::attempt($credentials)){
            $userInfo = User::where('email', '=', $request->email)->first();
            $request->session()->put('idUsuarioLogado', $userInfo->id);
            $request->session()->put('nameUsuarioLogado', $userInfo->name);
            $request->session()->put('emailUsuarioLogado', $userInfo->email);

            //return redirect()->route('admin.residuo.index');
            return redirect()->route('admin.bairro.index');
        }

        return redirect()->back()->withInput()->withErrors(['Usuário e/ou Senha não conferem!']);

    }


    public function logout()
    {
        Auth::logout();
	    return redirect()->route('front.login');
    }


7 - Acrescentar as rotas para acesso ao login conforme descrito abaixo:
    7.1 importar essa classe
    use App\Http\Controllers\MainController;

    7.2 adicionar essas rotas
    Route::get('/front/login', [AcessoController::class, 'login'])->name('front.login');
    Route::post('/front/check', [AcessoController::class, 'check'])->name('front.check');
    Route::get('/front/logout', [AcessoController::class, 'logout'])->name('front.logout');

8 - Definir o redirecionamento do usuário, caso o mesmo não seja autenticado com sucesso,
    no arquivo /app/Http/Middleware/Authenticate.php conforme descrito abaixo:

    protected function redirectTo($request)
    {
        if (! $request->expectsJson()) {
            return route('acesso.login');
        }
    }

9 - Criar a view (página) com formulário de login (acessologin.blade.php)

10 - Colocar no action do formulário de login a rota para autenticar o usuário na submissão do formulário, conforme abaixo:
      <form class="user" action="{{ route('acesso.check') }}" method="post" autocomplete="off">
            @csrf

11 - Definir no link de logout da página a rota para efetuar o logou do usuário conforme abaixo:
     <a class="btn btn-primary" href="{{ route('acesso.logout') }}">Logout</a>



===========================
CRIANDO O MÓDULO DE USUÁRIO
===========================
1 - Criar controller Usuário juntamente com seus respectivos métodos do tipo resource
    php artisan make:controller Admin/UserController --resource

2 - Adicionar as rotas para os métodos do controller UserController, conforme abaixo:

    // Users
    Route::resource('user', UserController::class);
    Route::get('user/{id}/profile', [UserController::class, 'profile'])->name('user.profile')->middleware(['auth']);
    Route::put('/user/{id}/updateprofile', [UserController::class, 'updateprofile'])->name('user.updateprofile')->middleware(['auth']);

2 - Criar o modelo User definindo os campos a serem preenchidos com massive assigment na propriedade $fillable = [] e definindo seus
    respectivos relacionamento com demias modelos hasOne, hasMany, belongsTo.
    php artisan make:model User

3 - Criar as requests para validação dos campos na Criação e Atualização dos dados do usuário conforme comandos abaixo
    php artisan make:request UserCreateRequest
    php artisan make:request UserUpdateRequest

4 - Desenvolver os métodos do UserController, acrescentando no inicio da classe os imports necessários conforme abaixo:
    use App\Http\Requests\UserCreateRequest;
    use App\Http\Requests\UserUpdateRequest;
    use App\Models\User;
    use Illuminate\Support\Facades\Validator;
    use Illuminate\Validation\Rule;
    etc...

================================
CONSTRUINDO UM HELP PERSONALIZDO
================================
1 - Site de Referência: https://privatecode.com.br/blog/criando-helpers-no-laravel
2 - Crie um arquivo de nome Helper.php dentro de uma pasta por nome Helpers dentro de app como descrito abaixo:
    (app/Helpers/Helper.php)
3 - No arquivo Helper.php coloque um código como descrito abaixo, para transformar a data no formato americano (BD) para o
    formato brasileiro, ou seja, yyyy-mm-dd para dd/mm/aaaa. 'mrc_turn_data' é o nome do helper a ser invocado ao longo da
    aplicação do Laravel.

    <?php
        if (!function_exists('mrc_turn_data')) {

            function mrc_turn_data($dataBd)
            {
                $dataTurn = implode('/', array_reverse(array_merge(explode('-', $dataBd))));
                return $dataTurn;
            }
        }

4 - Altere/Acrescente a propriedade "files" na propriedade "autoload" do arquivo composer.json indicando o caminho do Helper.php
    criado recentemente, conforme abaixo
    "autoload": {
        "files": [
            "app/Helpers/Helper.php"
        ],
    "psr-4": {

5 - Execute o comando: composer dump-autoload
6 - Faça uso do helper em qualquer arquivo blade conforme descrito abaixo:
    {{mrc_turn_data($compra->data_ini)}}


===========================
EXTRAINDO O MÊS DE UMA DATA
===========================
//página referência
//https://stackoverflow.com/questions/3768072/php-date-function-to-get-month-of-the-current-date




===============================================================================
CORRIGINDO ERRO: unserialize(): Extra data starting at offset 678 of 681 bytes
Site de Referência: https://github.com/mpdf/mpdf/issues/1895
===============================================================================
1 - Substitua o conteúdo da linha: 9094 do arquivo: ../vendor/mpdf/mpdf/src/Mpdf.php
        Substitua:  $c = explode("\xbb\xa4\xac", $t, 2);
        Por isso: $c = explode("\xbb\xa4\xac", $t, 3);
2 -  Salve o arquivo


========================================================
EXPLICANDO SELECT DEPENDENTE (MUNICIPIO/BAIRRO) NO EDIT
========================================================
1 - {{-- minicípio_id --}}
2 - <select name="municipio_id" id="municipio_id">
3 -    <option value="" selected disabled>Escolha...</option>
4 -    @foreach($municipios  as $municipio)
5 -        <option value="{{$municipio->id}}" {{old('municipio_id') == $municipio->id ? 'selected' : ''}}>{{$municipio->nome}}</option>
6 -    @endforeach
7 - </select>
8 -
9 -
10 -
11 - {{-- bairro_id --}}
12 - @if(count($errors) > 0)
13 -    <select name="bairro_id" id="bairro_id">
14 -        <option value="" selected disabled>Escolha o Bairro...</option>
15 -        @foreach($bairros  as $bairro)
16 -            @if($bairro->municipio_id == old('municipio_id'))
17 -                <option value="{{$bairro->id}}" {{old('bairro_id') == $bairro->id ? 'selected' : ''}}>{{$bairro->nome}}</option>
18 -            @endif
19 -        @endforeach
20 -    </select>
21 - @else
22 -    <select name="bairro_id" id="bairro_id" class="form-control">
23 -        <option value="" selected disabled>Escolha o Bairro...</option>
24 -    </select>
25 - @endif
26 - @error('bairro_id')
27 -    <small style="color: red">{{$message}}</small>
28 - @enderror




==============================================
SITES REFERÊNCIA PARA JQUERY DE LINHA DE DADOS
==============================================
//Sites ref:
// https://stackoverflow.com/questions/59133114/calculate-sum-from-number-type-input-fields-by-javascript?utm_source=pocket_mylist
// https://stackoverflow.com/questions/33581989/pass-current-text-as-parameter-to-jquery-function
// https://www.w3schools.com/jquery/jquery_traversing_siblings.asp
// https://stackoverflow.com/questions/41160023/jquery-calculate-field-from-two-other-fields
// https://stackoverflow.com/questions/2569699/how-can-one-select-specific-sibling-of-a-context-node-using-jquery
// https://codeburst.io/how-to-position-html-elements-side-by-side-with-css-e1fae72ddcc
// https://www.codingem.com/javascript-how-to-limit-decimal-places/
// https://www.alura.com.br/artigos/formatando-numeros-no-javascript
// https://stackoverflow.com/questions/6134039/format-number-to-always-show-2-decimal-places
// https://stackoverflow.com/questions/60235843/how-do-i-calculate-two-text-boxes-and-display-the-answer-in-another
// https://stackoverflow.com/questions/3937513/javascript-validation-for-empty-input-field
// https://www.geeksforgeeks.org/how-to-get-the-value-of-text-input-field-using-javascript/
// https://stackabuse.com/how-to-check-if-checkbox-is-checked-in-jquery-and-javascript/
// https://www.tutorialspoint.com/How-to-format-a-number-with-two-decimals-in-JavaScript
// https://pt.stackoverflow.com/questions/10002/como-a-fun%C3%A7%C3%A3o-parsefloat-funciona
// https://www.kadunew.com/blog/jquery/atribuindo-eventos-a-elementos-criados-dinamicamente
// https://stackoverflow.com/questions/12322704/running-jquery-each-on-dynamically-created-elements
// https://www.geeksforgeeks.org/how-to-handle-events-in-dynamically-created-elements-in-jquery/
// https://social.msdn.microsoft.com/Forums/en-US/7766f3ed-6e21-493e-b825-f72a0b5403c6/jquery-how-to-loop-through-dynamically-created-controls?forum=aspdotnetjquery
// https://blog.logrocket.com/how-to-dynamically-create-javascript-elements-with-event-handlers/
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+utilizar+method+each+for+elements+create+dinamic+with+jquery
// https://stackoverflow.com/questions/17451616/using-each-on-dynamic-objects-in-jquery
// https://stackoverflow.com/questions/17451616/using-each-on-dynamic-objects-in-jquery
// https://stackoverflow.com/questions/26592645/what-is-the-difference-between-domnodeinserted-and-domnodeinsertedintodocument
// https://nightwolf.dev/bind-to-dynamically-added-elements-with-jquery/
// https://learn.jquery.com/using-jquery-core/iterating/
// https://www.youtube.com/results?search_query=add+remove+fields+with+sum+and+subract+values+with+jquery
// https://stackoverflow.com/questions/7031226/jquery-checkbox-change-and-click-event
// https://laraveldaily.teachable.com/courses/laravel-eloquent-expert-level/lectures/6329054

how to register multiple records at the same time in laravel
// https://stackoverflow.com/questions/29723865/how-to-insert-multiple-rows-from-a-single-query-using-eloquent-fluent
// https://codingdriver.com/how-to-insert-multiple-rows-in-database-laravel-example.html
// https://codingdriver.com/page/6?s=laravel
// https://onlinecode.org/how-to-insert-multiple-records-in-laravel/
// https://www.codegrepper.com/code-examples/php/laravel+create+multiple+rows

how to register record in master detail style in laravel
// https://blog.quickadminpanel.com/master-detail-form-in-laravel-jquery-create-order-with-products/
// https://bootsnipp.com/snippets/BE93p
// https://laraveldaily.com/post/pivot-tables-and-many-to-many-relationships
// https://blog.quickadminpanel.com/master-detail-form-in-laravel-jquery-create-order-with-products/
// https://pt.stackoverflow.com/questions/5675/como-verificar-se-um-checkbox-est%C3%A1-checado-com-php
// https://stackoverflow.com/questions/24702640/laravel-save-update-many-to-many-relationship/24706638#24706638
// https://stackoverflow.com/questions/45210136/get-a-value-from-within-an-array-of-object-in-laravel

//
// https://laracasts.com/discuss/channels/laravel/laravel-sync-function-with-pivot
// https://www.scratchcode.io/source-books/laravel-sync-with-an-example/
// https://medium.com/@mateusgalasso/a-fun%C3%A7%C3%A3o-sync-em-laravel-c7fb1d8afbe1
// https://stackoverflow.com/questions/27230672/laravel-sync-how-to-sync-an-array-and-also-pass-additional-pivot-fields
// https://laracasts.com/discuss/channels/laravel/array-to-string-conversion-error-12
// https://www.codegrepper.com/code-examples/php/laravel+model+sync+array+to+string+conversion
https://stackoverflow.com/questions/45210136/get-a-value-from-within-an-array-of-object-in-laravel
// https://stackoverflow.com/questions/37432641/how-to-validate-on-max-file-size-in-laravel
// https://stackoverflow.com/questions/33676576/eloquent-laravel-how-to-get-a-row-count-from-a-get
// https://laracasts.com/discuss/channels/general-discussion/with-storage-to-check-if-the-directory-is-empty
// https://laravel.com/docs/8.x/eloquent-relationships#counting-related-models
// https://blog.pusher.com/advanced-laravel-eloquent-usage/
// https://pusher.com/tutorials/?q=laravel
// https://sam-ngu.medium.com/laravel-service-provider-in-simple-english-a0473991ee4c
// https://medium.com/@chirag-nandaniya/8-best-laravel-admin-panel-packages-for-your-back-office-system-56b9355f474c

remover opção de select
// https://www.google.com/search?client=ubuntu&channel=fs&sxsrf=ALiCzsYt-1CDMe0sRtKLOMWLU9VAuEE52g:1666201672200&q=How+take+off+an+option+of+the+option+selected+with+jquery+when+the+option+is+selected&spell=1&sa=X&ved=2ahUKEwiqqq727Oz6AhX0qJUCHaYADCUQBSgAegQIBxAB&biw=1322&bih=633&dpr=1
// https://stackoverflow.com/questions/1518216/jquery-remove-options-from-select
// https://www.tutorialrepublic.com/faq/how-to-get-the-value-of-selected-option-in-a-select-box-using-jquery.php

Trabalhando com datas
// https://dev.to/nicolus/how-the-new-one-of-many-laravel-relationship-made-my-project-600-times-faster-27ll
// https://dev.to/nicolus/how-to-properly-retrieve-laravel-models-between-two-dates-1bek
// https://stackoverflow.com/questions/33247908/get-only-records-created-today-in-laravel
// https://stackoverflow.com/questions/33247908/get-only-records-created-today-in-laravel


Trabalhando com mais de uma tabela pivo para os mesmos dados
(I can create mote than one pivot table with same data for record in laravel)
// https://stackoverflow.com/questions/44214912/how-to-create-multiple-pivot-tables-for-the-same-two-models-in-laravel
// https://laravel.com/docs/5.4/eloquent-relationships#many-to-many
// https://www.tutorialrepublic.com/faq/how-to-get-the-value-of-selected-option-in-a-select-box-using-jquery.php
// https://stackoverflow.com/questions/10011802/how-to-get-this-selected-option-in-jquery
// https://learn.jquery.com/using-jquery-core/faq/how-do-i-get-the-text-value-of-a-selected-option/
// https://forum.jquery.com/topic/this-option-selected-attr-rel-option-selected-is-not-working-in-ie
// https://stackoverflow.com/questions/1643227/get-selected-text-from-a-drop-down-list-select-box-using-jquery

// https://stackoverflow.com/questions/33312318/how-to-extract-values-from-html-input-type-date-using-jquery
// https://zerobugs.com.br/ver-post/javascript-converter-data-em-formato-padrao-americano-para-brasileiro/
// https://stackoverflow.com/questions/42490101/invalid-datetime-format-1292-incorrect-datetime-value
// https://stackoverflow.com/questions/33312318/how-to-extract-values-from-html-input-type-date-using-jquery
// https://stackoverflow.com/questions/4017910/jquery-work-with-date
// https://stackoverflow.com/questions/8345666/on-select-change-get-data-attribute-value
// https://www.stechies.com/notice-array-string-conversion-php/
// https://stackoverflow.com/questions/1313373/jquery-same-click-event-for-multiple-elements
// https://pt.stackoverflow.com/questions/23573/como-fazer-um-click-disparar-outro-click
// https://www.folkstalk.com/2022/09/how-to-check-if-jquery-element-is-loaded-with-code-examples-2.html
// https://www.geeksforgeeks.org/how-to-check-an-element-is-visible-or-not-using-jquery/
// https://acervolima.com/como-verificar-se-um-elemento-esta-visivel-ou-nao-usando-jquery/
// https://pt.stackoverflow.com/questions/23573/como-fazer-um-click-disparar-outro-click
// https://pt.stackoverflow.com/questions/252220/dois-eventos-em-fun%C3%A7%C3%A3o-jquery
// https://stackoverflow.com/questions/2534089/how-can-i-trigger-the-same-function-from-multiple-events-with-jquery
/
// https://stackoverflow.com/questions/49146806/laravel-search-model
// https://laravel.com/docs/8.x/queries#where-clauses

how to avoid with some characters become typed in text box with jquery
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+to+avoid+wich+some+caracteres+become+typed+in+text+box+with+jquery
// https://stackoverflow.com/questions/31988024/prevent-certain-characters-being-typed-into-text-input
// https://pt.stackoverflow.com/questions/187172/input-somente-numeros-com-jquery
// https://stackoverflow.com/questions/12001037/regex-for-validating-only-numbers-and-dots
// https://stackoverflow.com/questions/9799505/allow-only-numbers-and-dot-in-script
// https://pt.stackoverflow.com/questions/317166/validar-apenas-n%C3%BAmero-no-input
// https://stackoverflow.com/questions/7151159/javascript-regular-expression-remove-spaces
// https://stackoverflow.com/questions/9309278/javascript-regex-replace-all-characters-other-than-numbers
// https://stackoverflow.com/questions/49630564/regex-only-1-dot
// https://stackoverflow.com/questions/32957568/laravel-string-to-lower
// https://imasters.com.br/banco-de-dados/aprenda-9-truques-para-o-eloquent-laravel
// https://stackoverflow.com/questions/33361628/how-to-query-between-two-dates-using-laravel-and-eloquent
// https://stackoverflow.com/questions/72445611/how-to-generate-last-date-of-every-month-between-two-dates-in-postgresql
// https://www.w3resource.com/php-exercises/php-math-exercise-7.php
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+reload+page+with+an+jquey+and+ajax
// https://stackoverflow.com/questions/7881089/reload-the-page-after-ajax-success
// https://stackoverflow.com/questions/42407147/font-awesome-and-bootstrap-button-with-icons-syntaxhttps://stackoverflow.com/questions/133310/how-can-i-get-jquery-to-perform-a-synchronous-rather-than-asynchronous-ajax-re
// https://stackoverflow.com/questions/11686007/font-awesome-input-type-submit
// https://stackoverflow.com/questions/38172857/how-to-select-specific-columns-in-laravel-eloquent
// https://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-sum-with-group-by.php
// https://www.dialhost.com.br/blog/eloquent-simplificando-models-laravel/
// https://laracasts.com/discuss/channels/laravel/to-find-the-sum-with-group-by
// https://stackoverflow.com/questions/36950857/sqlstate42000-syntax-error-or-access-violation-1055-expression-3-of-select
// https://laracasts.com/discuss/channels/laravel/productionerror-sqlstate42000-syntax-error-or-access-violation-1055-expression-1-of-order-by-clause-is-not-in-group-by-in-ubuntu
// https://dev.mysql.com/doc/refman/8.0/en/group-by-handling.html
// https://stackoverflow.com/questions/24887708/laravel-eloquent-sum-with-groupby
// https://dev.mysql.com/doc/refman/8.0/en/counting-rows.html
// https://mpdf.github.io/paging/page-breaks.html
// https://laracasts.com/discuss/channels/eloquent/how-i-detect-current-collection-is-odd-or-even
// https://tutsforweb.com/loop-variable-foreach-blade-laravel/
// https://github.com/mccarlosen/laravel-mpdf/issues/29
// https://laraveldaily.com/post/how-to-catch-handle-create-laravel-exceptions
// https://stackoverflow.com/questions/63792747/warning-number-format-expects-parameter-1-to-be-float-string-given-in-d-xam
// https://stackoverflow.com/questions/642650/how-to-convert-string-into-float-in-javascript
// https://stackoverflow.com/questions/3053205/how-create-table-only-using-div-tag-and-css
// https://wisdmlabs.com/blog/responsive-tables-using-css-div-tag/
// https://www.folkstalk.com/2022/09/laravel-eloquent-sum-column-with-code-examples.html
// https://stackoverflow.com/questions/69394899/laravel-use-sum-with-a-few-conditions
// https://laracasts.com/discuss/channels/laravel/how-to-using-sumif-in-mysql-query-to-laravel-eloquent
// https://www.itsolutionstuff.com/post/laravel-sum-query-with-where-condition-exampleexample.html
// https://pt.stackoverflow.com/questions/131869/como-funciona-o-select-sumif
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+to+make+a+sum+conditional+with+mysql+in+laravel
// https://www.itsolutionstuff.com/post/laravel-sum-query-with-where-condition-exampleexample.html
// https://laracasts.com/discuss/channels/laravel/how-to-using-sumif-in-mysql-query-to-laravel-eloquent
// https://stackoverflow.com/questions/69394899/laravel-use-sum-with-a-few-conditions
// https://pt.stackoverflow.com/questions/131869/como-funciona-o-select-sumif
// https://www.mysqltutorial.org/mysql-if-function.aspx
// https://pt.stackoverflow.com/questions/188190/formatar-moeda-com-separador-de-milhar
// https://www.google.com/search?channel=fs&client=ubuntu&q=como+formatar+um+numero+com+separacao+de+milhar+com+ponto+e+separacao+de+decimal+com+virgulla+no+javascript
// https://www.devmedia.com.br/javascript-replace-substituindo-valores-em-uma-string/39176
// https://www.geeksforgeeks.org/javascript-replace-multiple-strings-with-multiple-other-strings/
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+replace+several+values+with+javascript
// https://tutorial.eyehunts.com/js/javascript-string-replace-multiple-example-code/
// https://muhimasri.com/blogs/how-to-replace-multiple-words-and-characters-in-javascript/
// https://bobbyhadz.com/blog/javascript-replace-multiple-characters-in-string
// https://acervolima.com/como-simular-um-clique-com-javascript/
// https://stackoverflow.com/questions/1313373/jquery-same-click-event-for-multiple-elements
// https://www.schoolofnet.com/forum/topico/implementar-camada-service-4254
// https://www.schoolofnet.com/accounts/login/
// https://laravel-docs-pt-br.readthedocs.io/en/latest/container/
// https://www.w3schools.com/jsref/jsref_parseint.asp
// https://www.alura.com.br/artigos/convertendo-string-para-numero-em-javascript?gclid=CjwKCAiAjs2bBhACEiwALTBWZTe-vkWh7mMPfpRh9L07KBy1xrD1cFT0gEwg2P_PUo6fRW6dFU-gWRoCS_cQAvD_BwE
// https://laracasts.com/discuss/channels/laravel/counting-record-with-hasmanythrough-and-withcount
// https://dev.to/mahmudulhsn/laravel-has-many-through-relationship-explained-with-example-22p4
// https://stackoverflow.com/questions/47307705/count-from-hasmanythrough-relationship-with-eager-loading-need-only-count
// https://www.schoolofnet.com/forum/topico/laravel-count-de-registro-11117
// https://stackoverflow.com/questions/13075505/mysql-is-it-possible-to-sum-if-or-to-count-if
// https://www.mysqltutorial.org/mysql-count/
// https://forum.imasters.com.br/topic/351617-resolvido%C2%A0como-pegar-dia-ou-mes-ou-ano-de-data/
// https://blog.betrybe.com/php/php-date/
// https://laravel.com/docs/8.x/helpers#method-str-substr
// https://mpdf.github.io/reference/mpdf-functions/setwatermarktext.html
// https://www.w3docs.com/snippets/html/how-to-create-an-anchor-link-to-jump-to-a-specific-part-of-a-page.html
// https://stackoverflow.com/questions/37695864/how-to-put-route-in-anchor-tag-in-laravel-5-2
// https://stackoverflow.com/questions/42614107/call-to-a-member-function-where-on-integer
// https://laravel.com/docs/8.x/queries
// https://www.chartjs.org/docs/2.9.4/
// https://stackoverflow.com/questions/41887460/select-list-is-not-in-group-by-clause-and-contains-nonaggregated-column-inc
// https://laracasts.com/discuss/channels/eloquent/the-sql-select-distinct-statement
// https://stackoverflow.com/questions/2142535/how-to-clear-the-canvas-for-redrawing
// https://acervolima.com/php-funcao-str_replace/
// https://stackoverflow.com/questions/57301625/input-date-field-should-display-month-year-only
// https://stackoverflow.com/questions/31131275/create-a-multi-line-chart-using-chart-js
// https://www.chartjs.org/docs/latest/samples/area/line-datasets.html
// https://www.javatpoint.com/javascript-global-variable
// https://www.w3schools.com/js/js_arrays.asp
// https://stackoverflow.com/questions/12491101/javascript-create-array-from-for-loop
// https://stackoverflow.com/questions/24815851/how-to-clear-a-chart-from-a-canvas-so-that-hover-events-cannot-be-triggered
// https://www.chartjs.org/docs/latest/developers/api.html
// https://www.tutorialrepublic.com/faq/how-to-get-the-data-id-attribute-of-an-element-using-jquery.php
// https://stackoverflow.com/questions/3087975/how-to-change-the-cursor-into-a-hand-when-a-user-hovers-over-a-list-item
// https://stackoverflow.com/questions/34403510/chart-js-straight-lines-instead-of-curves
// https://www.w3resource.com/javascript-exercises/javascript-math-exercise-17.php
// https://www.programiz.com/javascript/examples/add-number
// https://stackoverflow.com/questions/36749509/removing-legend-on-charts-with-chart-js-v2
// https://www.phptutorial.net/php-tutorial/php-ternary-operator/
// https://imasters.com.br/front-end/entendendo-o-event-delegation-da-funcao-on-no-jquery
// https://stackoverflow.com/questions/25228823/how-to-get-distinct-values-for-non-key-column-fields-in-laravel
// https://www.itsolutionstuff.com/post/laravel-collection-get-unique-values-exampleexample.html
// https://stackoverflow.com/questions/9229645/remove-duplicate-values-from-js-array
// https://dev.to/soyleninjs/3-ways-to-remove-duplicates-in-an-array-in-javascript-259o
// https://stackoverflow.com/questions/31059399/how-to-push-datasets-dynamically-for-chart-js-bar-chart
// https://stackoverflow.com/questions/41805180/add-dynamic-dataset-to-chart-js
// https://jsfiddle.net/ts8rn7vs/
// https://www.w3schools.com/js/js_loop_forof.asp
// https://www.w3schools.com/jsref/jsref_foreach.asp
// https://pt.stackoverflow.com/questions/6526/como-formatar-data-no-javascript
// https://www.alura.com.br/artigos/objeto-format-date-e-formato-datas-em-javascript?gclid=Cj0KCQiAwJWdBhCYARIsAJc4idCsZsJEmP9fE5UPyZxaGiLykDZ6QjQiZlGwnc1JhZmkUz5Jf2pu5twaAp8qEALw_wcB
// https://www.w3schools.com/js/js_array_iteration.asp
// https://horadecodar.com.br/2020/09/22/como-deletar-uma-variavel-em-javascript/
// https://www.w3schools.com/react/react_es6_spread.asp
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
// https://pt.stackoverflow.com/questions/1667/como-detectar-se-um-elemento-html-est%C3%A1-vazio
// https://www.javascripttutorial.net/array/javascript-sort-an-array-of-objects/
// https://stillat.com/blog/2016/11/16/laravel-string-helper-function-substr

ParseError Invalid numeric literal
// https://pt.stackoverflow.com/questions/213834/php-parse-error-invalid-numeric-literal
// https://cursos.alura.com.br/forum/topico-php-parse-error-invalid-numeric-literal-135880

// https://stackoverflow.com/questions/8529656/how-do-i-convert-a-string-to-a-number-in-php
// https://stackoverflow.com/questions/23042182/increase-bootstrap-dropdown-menu-width
// https://www.edureka.co/community/65213/how-to-check-request-is-ajax-or-not-in-laravel

// https://www.google.com/search?channel=fs&client=ubuntu&q=how+I+to+use+polices+in+method+construct+in+laravel
// https://itnext.io/laravel-you-can-declare-your-gates-and-policies-in-your-controller-2b596f3dd373
// https://stackoverflow.com/questions/47973084/laravel-policies-in-controller-constructor
// https://laracasts.com/discuss/channels/general-discussion/authorization-policies-and-reducing-the-repitition
// https://laravel-news.com/laravel-gates-policies-guards-explained

// https://stackoverflow.com/questions/44070980/make-pie-chart-smaller-chart-js

// https://www.techiedelight.com/pt/check-array-contains-duplicates-javascript/
// https://www.w3schools.com/js/js_object_sets.asp
// https://www.w3schools.com/jquery/event_trigger.asp
// https://www.google.com/search?channel=fs&client=ubuntu&q=how+throw+a+modal+without+click+at+a+button+with+javascript
// https://www.w3schools.com/jquery/tryit.asp?filename=tryjquery_event_trigger
// https://stackoverflow.com/questions/44146007/how-to-call-javascript-modal-without-button-press

// https://www.w3schools.com/php/func_date_date.asp
// https://codeanddeploy.com/blog/laravel/laravel-8-simple-custom-validation-rules-example?utm_source=pocket_saves
// https://gist.github.com/guisehn/3276302
// https://gist.github.com/rafael-neri/ab3e58803a08cb4def059fce4e3c0e40
// https://laravel.com/docs/8.x/routing#accessing-the-current-route
// https://stackoverflow.com/questions/46131745/laravel-throw-error-from-controller
// https://stackoverflow.com/questions/40975467/passing-parameters-to-middleware-in-laravel?utm_source=pocket_saves
// https://pt.stackoverflow.com/questions/145845/definindo-um-middleware-para-um-controller-exceto-uma-fun%C3%A7%C3%A3o-no-laravel-5?utm_source=pocket_saves
// https://stackoverflow.com/questions/51578472/check-if-a-route-parameter-exists-in-laravel-custom-validation-rule
// https://stackoverflow.com/questions/61432488/php-error-unparenthesized-a-b-c-d-e-is-deprecated-use-either-a
// https://www.allphptricks.com/how-to-encrypt-decrypt-string-in-php/
// https://www.google.com/search?q=Too+few+arguments+to+function+%7Bclosure%7D%28%29%2C+1+passed+in++and+exactly+2+expected+in+laravel+joinSub&client=ubuntu&hs=N2p&sca_esv=582799658&channel=fs&sxsrf=AM9HkKmsA42FUaNMtBGlhUwLr3Y2aoa7Hw%3A1700097522161&ei=8m1VZZGtCcnd1sQP6I6-2A4&ved=0ahUKEwiR7pDnrMeCAxXJrpUCHWiHD-sQ4dUDCA8&uact=5&oq=Too+few+arguments+to+function+%7Bclosure%7D%28%29%2C+1+passed+in++and+exactly+2+expected+in+laravel+joinSub&gs_lp=Egxnd3Mtd2l6LXNlcnAiYVRvbyBmZXcgYXJndW1lbnRzIHRvIGZ1bmN0aW9uIHtjbG9zdXJlfSgpLCAxIHBhc3NlZCBpbiAgYW5kIGV4YWN0bHkgMiBleHBlY3RlZCBpbiBsYXJhdmVsIGpvaW5TdWJIAFAAWABwAHgBkAEAmAEAoAEAqgEAuAEDyAEA-AEB4gMEGAAgQQ&sclient=gws-wiz-serp
// https://stackoverflow.com/questions/60036313/laravel-eloquent-too-few-arguments-to-function-1-passed-2-expected-in-my-query
// https://laracasts.com/discuss/channels/laravel/too-few-arguments-to-function-4






'<div class="psdth" style="float: left; width: 10%; height: 40px; border: 1px solid #c9bdbd"> {{mrc_turn_value('+ parsefloat("100.50") +')}}</div>'


// https://www.youtube.com/watch?v=69pTm_GBpsE
// https://www.youtube.com/watch?v=j9lLXp_kb3U
// https://www.youtube.com/watch?v=gbSOEzAfw_I
// https://api.jquery.com/multiple-selector/
// https://www.youtube.com/watch?v=gUqKf-U6Dx0
// https://www.youtube.com/watch?v=7efeIJ7oFTc
// https://www.youtube.com/watch?v=mHnvwFrZAkw
// https://www.youtube.com/watch?v=7efeIJ7oFTc
// https://www.youtube.com/watch?v=hy0oieokjtQ
// https://www.youtube.com/watch?v=1AxQNDOJTBw
// https://www.youtube.com/watch?v=aPYEOVDTV6E
// https://www.youtube.com/watch?v=ld5HwiENA8k
// https://www.youtube.com/watch?v=kPFG5Dw63qI
// https://www.youtube.com/watch?v=LF9NiVS6-Hc&t=601s
// https://www.youtube.com/watch?v=2sr4abjGs-s
// https://www.youtube.com/watch?v=LF9NiVS6-Hc
// https://www.youtube.com/watch?v=RyERAzUuZv8
// https://www.youtube.com/watch?v=zh-ec7GTJiI&list=PLc1g3vwxhg1ULUTrmSrqwa1I75yndz3eb&index=5
// https://www.youtube.com/watch?v=-6W8UICjDSo
// https://www.youtube.com/watch?v=K-uvIn-4Ug0



how I know if an or other event in jquery foi trigged
How to Enable jQuery Each on Dynamically Added Content

=================================
SELECT'S PARA GERAÇÃO DE GRÁFICOS
=================================
SELECT categoria_nome FROM bigtable_data WHERE MONTH(data_ini) = '11';
SELECT categoria_nome, quantidade, precototal FROM bigtable_data WHERE MONTH(data_ini) = 11;
SELECT categoria_id, categoria_nome, quantidade, precototal FROM bigtable_data WHERE MONTH(data_ini) = 11 AND categoria_id = 1;
SELECT categoria_id, categoria_nome, SUM(quantidade), SUM(precototal) FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY categoria_id;
SELECT categoria_nome, SUM(precototal) as totalcompra FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY categoria_nome ORDER BY categoria_nome ASC;
SELECT produto_nome, preco FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 ORDER BY preco ASC
SELECT produto_nome, af, preco, data_ini FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 ORDER BY data_ini ASC, preco ASC
SELECT produto_nome, semana_nome, af, preco, data_ini FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 ORDER BY data_ini ASC, preco ASC

SELECT produto_id, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome
SELECT identificacao, produto_id, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE restaurante_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome
SELECT municipio_nome, produto_id, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE municipio_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome
SELECT regional_nome, produto_id, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE regional_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome


*PROVA OK*
SELECT regional_nome, produto_id, semana, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE regional_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome
SELECT regional_nome, produto_id, semana, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE regional_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome
SELECT regional_nome, produto_id, semana, semana_nome, preco, af, AVG(IF(af = "sim", preco, NULL)) AS mdprcaf, AVG(IF(af = "nao", preco, NULL)) AS mdprcnorm FROM bigtable_data WHERE regional_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome ORDER BY semana ASC, mdprcnorm ASC, mdprcaf ASC

Seleção de produtos por categoria em seus respectivos valores
SELECT categoria_nome as nome, af, SUM(IF(af = 'nao', precototal, 0)) as totalcompranormal, SUM(IF(af = 'sim', precototal, 0)) as totalcompraaf, SUM(precototal) as totalcompra FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY categoria_id ORDER BY totalcompra ASC
SELECT categoria_nome, produto_nome, SUM(precototal) FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY produto_id ORDER BY precototal ASC
SELECT categoria_nome, produto_nome, SUM(precototal) FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY categoria_nome, produto_id ORDER BY categoria_nome ASC, precototal ASC

SELECT  DISTINCT categoria_id, categoria_nome FROM bigtable_data WHERE MONTH(data_ini) = 11 ORDER BY categoria_nome ASC
SELECT  DISTINCT categoria_id, categoria_nome as nomelabel FROM bigtable_data WHERE MONTH(data_ini) = 11 ORDER BY nomelabel ASC
SELECT categoria_nome as nomeprincipal, produto_nome as nomesecundario, SUM(precototal) as valorcompra FROM bigtable_data WHERE MONTH(data_ini) = 11 GROUP BY categoria_id, produto_id ORDER BY categoria_nome ASC, valorcompra ASC


*** SELECT'S PARA GRÁFICO COMPARATIVO DE COMPRAS NORMAL E AF MÊS A MÊS
SELECT produto_id, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022
SELECT produto_id, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022
SELECT produto_id, produto_nome, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 GROUP BY data_ini
SELECT produto_id, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 GROUP BY MONTH(data_ini)
SELECT produto_id, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND YEAR(data_ini) = 2022 GROUP BY MONTH(data_ini) ORDER BY MONTH(data_ini) ASC






=================================================================================================
ACESSANDO UMA PROPRIEDADE DE UMA COLECTION ( ->get()) SEM FOREACH na VIEW OU NO PRÓPRIO CONTROLLE
=================================================================================================
Obs:  Se a regra de negócio mudar e a nutricionista da SEDES for responsável por mais de um restaurante, utilizar query com ->get() no final,
      como comentado abaixo, pois retorna uma collection.
      $restaurantes = Restaurante::with(['municipio', 'bairro', 'empresa', 'nutricionista', 'user', 'compras'])->where('user_id', '=', Auth::user()->id)->get();
      $compras = Compra::where('restaurante_id', '=', $restaurantes[0]['id'])->orderBy('data_ini', 'DESC')->get();
      return view('admin.compra.index', compact('restaurantes', 'compras'));
Obs:  Na view (admin.compra.index), para acessar a identificacao do restarurante dever-se-ia colocar:
      <strong>COMPRAS: Restaurante {{ $restaurantes[0]['identificacao'] }}</strong>
        <div class="card-body">
            <div class="table-responsive">
                {{ $restaurante[0]['identificacao'] }}
            </div>
        </div>

===============================================================================
CONFIGURANDO UM NÚMERO DE COMPRA - Colocar no método store do CompraControlleer
===============================================================================
//Configurando o número da compra
        $numrest = $request->restaurante_id_hidden;         //Id do restaurante
        $numsemana = $request->semana;                      //Numero da semana
        $numDiaIni = Str::substr($request->data_ini, 8,2);  //Dia inicial
        $numDiaFin = Str::substr($request->data_fin, 8,2);  //Dia final
        $numMesIni = Str::substr($request->data_ini, 5,2);  //Mês
        $numAnoIni = Str::substr($request->data_ini, 2,2);  //Ano (só os dois últimos dígitos)

        $numerocompra = $numrest.$numsemana.".".$numDiaIni.$numDiaFin."-".$numMesIni.$numAnoIni;
//Fim configurando o número da compra



===============================================================================
UMA POSSÍVEL SOLUÇÃO PARA A EDIÇÃO DE REGISTRO MANY TO MANY COM O MÉTODO ATTACH
===============================================================================
1 - Acrescentar um identificador (id) na tabela pivot (compra_produto)
2 - Acessar os registros de compra como está sendo feito atualmente com a consulta, só que habilitando para edição
3 - Editar, Acrescentar, Apagar os registros conforme necessidade do operador
4 - Na hora de "atualizar", criar e chamar um método que apague todos os registros que possuam as chaves: id_compra x id_produto do
    da compra atual, ou melhor, todas as compras com o ID da compra atual
    novamene como já está sendo feito atualmente com o método attach.
    OBS: o método attach permite cadastrar id_compra x id_produto mais de uma vez como no exemplo abaixo. Por isso acho
         conveniente informar uma chave adicional com o id da relação compra x produto
         compra x   produto
         1          1
         1          2
         1          3
         1          1
         1          2



================
COMANDOS artisan
================
1 - Para gerar o link simbólico para a pasta app/public
php artisan storage:link
php artisan clear-cache
composer dump-autoload
php artisan migrate:rollback --step=5
Sempre que alterar o arquivo .env  executar o comando: php artisan config:clear
php artisan route:cache
php artisan route:clear
php artisan config:clear
php artisan config:cache
php artisan optimize



=========================
QUESTIONAMENTOS A MESSIAS
=========================
Uma empresaa tem mais de um nutricionista ?
Uma emprea pode ser responsável por mais de um restaurante ?
Um nutricionista de uma empresa pode ser responsável por mais de um restaurante ?
Um nutricionista da SEDES pode ser responsável por mais de um restaurante ?



==================================================
Método STORE de tabelas PIVOT - CompraControlleer
==================================================
public function store(CompraCreateRequest $request, $idrestaurante)
    {
        /*
        //dd($request->all());

        //Capturando os valores dos campos diretamente
        Compra::create([
            'semana'            => $request['semana'],
            'data_ini'          => $request['data_ini'],
            'data_fin'          => $request['data_fin'],
            'valor'             => $request['valor'],
            'valoraf'           => $request['valoraf'],
            'valortotal'        => $request['valortotal'],
            //'valortotal'      => $request['valor'] + $request['valoraf'],
            'restaurante_id'    => $idrestaurante
        ]);
        */


        DB::beginTransaction();

            //Com o $resquest->all(), só os campos definidos no model (propriedade $fillable) serão gravados
            $compra = Compra::create($request->all());

            $produto = $request->input('produto_id', []);
            $quantidade = $request->input('quantidade', []);
            $medida_id = $request->input('medida_id', []);
            $detalhe = $request->input('detalhe', []);
            $preco = $request->input('preco', []);
            $af_hidden = $request->input('af_hidden', []); // Substituido: $af = $request->input('af', []);
            $precototal = $request->input('precototal', []);

            for ($item = 0; $item < count($produto); $item++) {

                if ($produto[$item] != '') {


                    /*
                    //ASSOCIAÇÃO COM MÉTODO ATTACH e campos adicionais
                    //Obs: $produto[$item] é o id do produto atual ($produto_id) dentro do loop for
                    $compra->produtos()->attach($produto[$item],
                        [
                            'quantidade' => $quantidade[$item],
                            'medida_id' => $medida_id[$item],
                            'detalhe' => $detalhe[$item],
                            'preco' => $preco[$item],
                            //'af' => (isset($_POST['af'][$item]) ? 'sim' : 'nao' ),  // Vefifica se o checkbox existe. Substituido
                            'af' =>  $af_hidden[$item],
                            'precototal' => $precototal[$item],
                        ]);
                    */


                    //ASSOCIAÇÃO COM MÉTODO SYNC e campos adicionais
                    //Obs: $produto[$item] é o id do produto atual ($produto_id) dentro do loop for

                    //$compra->produtos()->syncWithoutDetaching([$produto[$item] =>
                    $compra->produtos()->sync([$produto[$item] =>
                        [
                            'quantidade' => $quantidade[$item],
                            'medida_id' => $medida_id[$item],
                            'detalhe' => $detalhe[$item],
                            'preco' => $preco[$item],
                            //'af' => (isset($_POST['af'][$item]) ? 'sim' : 'nao' ),  // Vefifica se o checkbox existe. Substituido
                            'af' =>  $af_hidden[$item],
                            'precototal' => $precototal[$item],
                        ]], false);


                }
            }

            /*
            //Tenho que transformar o loop for acima neste estrutura, onde 1, 2, 3 são os IDs do produtos e os arraya que
            //eles se referem 1 => [], corresponde aos campos e seus devidos valores em uma tabela do tipo pivot.
            //Obs: com o segundo parâmetro 'false', não ha a necessidade de transformar o loop acima na estrutura abaixo,
            //     mas também caso seja deletada uma linha a mesma não será apagada.
            $compra->produtos()->sync([
                1 => ['quantidade' => 10, 'medida_id' => 1, 'detalhe' => 'avocado', 'preco' => 5.00, 'af' => 'sim', 'precototal' => 50.00],
                2 => ['quantidade' => 5, 'medida_id' => 1, 'detalhe' => 'tommy', 'preco' => 7.00, 'af' => 'nao', 'precototal' => 35.00],
                2 => ['quantidade' => 5, 'medida_id' => 2, 'detalhe' => 'princesa', 'preco' => 8.00, 'af' => 'nao', 'precototal' => 40.00],
            ]);
            */

        DB::commit();

        $request->session()->flash('sucesso', 'Registro incluído com sucesso!');

        return redirect()->route('admin.restaurante.compra.index', $idrestaurante);
    }



==================================================
Método UPDATE de tabelas PIVOT - CompraControlleer
==================================================
public function update(CompraUpdateRequest $request, $idrestaurante, $idcompra)
    {

        $compra = Compra::find($idcompra);

        DB::beginTransaction();

            $compra->update($request->all());

            $produto = $request->input('produto_id', []);
            $quantidade = $request->input('quantidade', []);
            $medida_id = $request->input('medida_id', []);
            $detalhe = $request->input('detalhe', []);
            $preco = $request->input('preco', []);
            $af_hidden = $request->input('af_hidden', []); // Substituido: $af = $request->input('af', []);
            $precototal = $request->input('precototal', []);

            //dd($request->all());

            for ($item = 0; $item < count($produto); $item++) {

                if ($produto[$item] != '') {


                    //ASSOCIAÇÃO COM MÉTODO SYNC e campos adicionais
                    //Obs: $produto[$item] é o id do produto atual ($produto_id) dentro do loop for

                    //$compra->produtos()->syncWithoutDetaching([$produto[$item] =>
                    $compra->produtos()->sync([$produto[$item] =>
                        [
                            'quantidade' => $quantidade[$item],
                            'medida_id' => $medida_id[$item],
                            'detalhe' => $detalhe[$item],
                            'preco' => $preco[$item],
                            'af' =>  $af_hidden[$item],
                            'precototal' => $precototal[$item],
                        ]], false);
                }
            }

        DB::commit();

        $request->session()->flash('sucesso', 'Registro atualizado com sucesso!');

        return redirect()->route('admin.restaurante.compra.index', $idrestaurante);
    }


=========================
EXPORTANDO DADOS COM MPDF
=========================
1 - Páginas de referência:
    video tutorial =    https://www.youtube.com/watch?v=07XlgQuX_dA&t=603s (Export Data to PDF - Become a Master in Laravel - 39)
    criar tabelas =     https://divtable.com/table-styler/
    biblioteca =        https://github.com/mpdf/mpdf
    documentação =      https://mpdf.github.io/


2 - No terminal, na pasta do seu projeto, instale a biblioteca com o comando abaixo:
    composer require mpdf/mpdf

3 - Após a instalação, na pasta routes/web, crie as rotas para os metodos nos controllers que exibirão os PDFs como abaixo:
    // RELATÓRIOS PRODUTOS
    Route::get('admin/produto/pdf/relatoriopdfproduto', [ProdutoController::class, 'relatoriopdfproduto'])->name('admin.produto.relatoriopdfproduto')->middleware(['auth']);

4 - Crie o método relatoriopdfproduto no controller ProdutoController para testar a rota, como abaixo:
    public function relatoriopdfproduto()
    {
        return "Relatório PDF";
    }

5 - Crie o link na view index (ou onde mais interessar possa) para vincular à roda criada acima, como abaixo: Testa a rota clicando no link
    <a class="btn btn-primary btn-danger" href="{{route('admin.produto.relatoriopdfproduto')}}" role="button" style="margin-bottom: 10px" target="_blank">
        <i class="far fa-file-pdf"></i>pdf
    </a>

6 - Crie a pasta view/admin/produto/pdf

7 - Crie o arquivo pdfproduto.blade.php dentro da pasta view/admin/produto/pdf/ com a estrutura abaixo:

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>SEDES - Produto</title>
    </head>


    <body>
        <table style="width: 717px; border-collapse: collapse;">

            @foreach ($produtos as $produto)
                <tr @if($loop->even) style="background-color: #e3e3e3;" @endif>
                    <td style="width: 50px;" class="dados-lista">{{$produto->id}}</td>
                    <td style="width: 667px;" class="dados-lista">{{$produto->nome}}</td>
                </tr>
            @endforeach

        </table>
    </body>
    </html>


8 - Substitua o conteúdo do método relatoriopdfproduto criado no passo 4, pelo descrito abaixo

    public function relatoriopdfproduto()
    {
        $produtos =  Produto::all();

        return view('admin.produto.pdf.pdfproduto', compact('produtos'));
    }


9 - Clinque no link novamente para descrito no passo 5 para testar a chamada da view e exibir os dados

10 - Substitua o conteúdo do método relatoriopdfproduto, pelo descrito abaixo

    public function relatoriopdfproduto()
    {
        // Obtendo os dados
        $produtos =  Produto::all();

        // Definindo o nome do arquivo a ser baixado
        $fileName = ('Produtos_lista.pdf');

        // Invocando a biblioteca mpdf e definindo as margens do arquivo
        $mpdf = new \Mpdf\Mpdf([
            'margin_left' => 10,
            'margin_right' => 10,
            'margin_top' => 32,
            'margin_bottom' => 15,
            'margin-header' => 10,
            'margin_footer' => 5
        ]);

        // Configurando o cabeçalho da página
        $mpdf->SetHTMLHeader('
            <table style="width:717px; border-bottom: 1px solid #000000; margin-bottom: 3px;">
                <tr>
                    <td style="width: 83px">
                        <img src="images/logo-ma.png" width="80"/>
                    </td>
                    <td style="width: 282px; font-size: 10px; font-family: Arial, Helvetica, sans-serif;">
                        Governo do Estado do Maranhão<br>
                        Secretaria de Governo<br>
                        Secreatia Adjunta de Tecnologia da Informação/SEATI<br>
                        Secretaria do Estado de Desenvolvimento Social/SEDES
                    </td>
                    <td style="width: 352px;" class="titulo-rel">
                        PRODUTOS
                    </td>
                </tr>
            </table>
            <table style="width:717px; border-collapse: collapse;">
                <tr>
                    <td width="50px" class="col-header-table">ID</td>
                    <td width="400px" class="col-header-table">NOME</td>
                </tr>
            </table>
        ');

        // Configurando o rodapé da página
        $mpdf->SetHTMLFooter('
            <table style="width:717px; border-top: 1px solid #000000; font-size: 10px; font-family: Arial, Helvetica, sans-serif;">
                <tr>
                    <td width="239px">São Luis(MA) {DATE d/m/Y}</td>
                    <td width="239px" align="center"></td>
                    <td width="239px" align="right">{PAGENO}/{nbpg}</td>
                </tr>
            </table>
        ');


        // Definindo a view que deverá ser renderizada como arquivo .pdf e passando os dados da pesquisa
        $html = \View::make('admin.produto.pdf.pdfproduto', compact('produtos'));
        $html = $html->render();

        // Definindo o arquivo .css que estilizará o arquivo blade na view ('admin.produto.pdf.pdfproduto')
        $stylesheet = file_get_contents('pdf/mpdf.css');
        $mpdf->WriteHTML($stylesheet, 1);

        // Transformando a view blade em arquivo .pdf e enviando a saida para o browse (I); 'D' exibe e baixa para o pc
        $mpdf->WriteHTML($html);
        $mpdf->Output($fileName, 'I');

        //return view('admin.produto.pdf.pdfproduto', compact('produtos'));
    }

11 - Clinck no link para gerar o arquivo .pdf e veja o arquivo .pdf gerado


===================================================
CRIANDO SEEDER PARA POPULAR TABELAS APÓS INSTALAÇÃO
===================================================
1 - Criar o seeder com o comando abaixo, para criar o arquivo em database/seeders
    php artisan make:seeder MunicipioSeeder

2 - Importar o modelo como qual se quer trabalhar
    use App\Models\Municipio

3 - No método Run(), crie uma nova instância do municipio e atribua valores aos campos. Salve o objeto, como segue abaixo
    public function run()
    {
        $municipio = new Municipio();
        $municipio->nome = "São Luis";
        $municipio->ativo = true;
        $municipio->save();
    }

4 - Execute os passos de 1 a 3 descritos acima alterando apenas o método run() do seeder de User
    além de importar a classe Has, como descrito abaixo

    use Illuminate\Support\Facades\Hash;

    // Campos nullable não é necessário ser informado
    public function run()
    {
        $user = new User();
        $user->fullname = "Marcio Nonato F Vieira";
        $user->cpf = "471.183.423-11";
        $user->telefone = "(98) 98702-3329";
	    $user->name = "Marcio Vieira";
	    $user->email = "marcio@seati.ma.gov.br";
        $user->perfil = "adm";
        $user->municipio_id = 1;
	    $user->password = Hash::make('123456');
	    $user->save();
    }

5 - No método run() do Seeder padrão (DatabaseSeeder.php), chamar as seeder criadas com o método call
    como descrito abaixo

    public function run()
    {
        // \App\Models\User::factory(10)->create();
        $this->call(MunicipioSeeder::class);
        $this->call(UserSeeder::class);
    }

6 - No terminal, rode as seeder com uma das formas abaixo:
    a) php artisan db:seed (Roda todas as seeders)
    b) php artisan db:seed --class=NomeDaSeeder (roda uma seeder específica)
    c) php artisan migrate:fresh --seed


===========================================================================
RECUPERANDO REGISTROS ATRAVÉS DE UM RELACIONAMENTO CRUZADO (hasManyThrough)
===========================================================================
1 - Situação:
    Regionais tem um relacionamento um para muitos com municípios (hasMany)
    Municipios tem um relacionamento um para muitos com restaurantes (hasMany)
    Restaurante tem um relacionamento belongsTo com Municipio e Municipio tem um relacionamento belongsTo com Regionais

    Regional não se relaciona diretamente com Restaurante e sim com Municipio que por sua vez se relaciona com Restaurante

2 - No model Regional acrescentar o relacionamento cruzado hasManyThrough, como abaixo:
    class Regional extends Model

    public function restaurantes ()
    {
        return $this->hasManyThrough(Restaurante::class, Municipio::class);
    }

3 - Em um controller para obter todos os Restaurantes de todas as Regionais, colocar como abaixo: 1 é o id da Regional
    use App\Models\Regional;

    $regionais = Regional::all(); ou
    $regionais =  Regional::findOrFail(1);

    foreach($regionais as $regional) {

        //var_dump ($regional->restaurantes);

        foreach ($regional->restaurantes as $restaurante) {
            echo $restaurante->identificacao. "<br>";
        }
    }

    OU

    // Recupera todas as Regionais
    //$regionais = Regional::all();

    ou

    // Recupera só a regional cujo ID é 3
    $regionais = Regional::findOrFail(3);

    $restsRegional = $regionais->restaurantes;   // ->restaurante é o método no model Regional

    foreach($restsRegional as $restaurante){
        echo $restaurante->identificacao;
    }

    ou

    //$regionais = Regional::all();
    $regionais = Regional::findOrFail(3);
    $restaurantes = $regionais->restaurantes;
    foreach($restaurantes as $restaurante){
        echo $restaurante->identificacao;
    }


==============================
COMENTÁRIOS SOLTOS DE CÓDIGOS
==============================
//dd($request->file('comprovante')); ou
//dd($request->'comprovante');

//groupBy() and sum() devem vir sempre depois de uma coleção do tipo: ->get(), all(), where()->get(), etc...


// primeiro parâmetro, local onde se quer armazenar o arquivo (dentro da pasta : documentos/restaurante/compra). Se não existir é criado a pasta
// segundo parâmetro, qual disco (local, public ou S3), deseja-se armazenar o upload. No caso será o 'public'.
// Obs: O método store, retorna o caminho onde o arquivo foi armazenado no disco.
// Armazenando o arquivo no disco public e retornando a url (caminho) do arquivo
$comprovanteURL = $request->comprovante->store("documentos/$restaurante/$compra->id", "public");

 //return "Comprovantes relativos à compra: {$idcompra} ".$idcompra ;


//$records = DB::table('bigtable_data')->get();
//$records = DB::table('bigtable_data')->where('restaurante_id', '=', 1)->where('categoria_id', '=', 1)->get();
//$records = DB::table('bigtable_data')->where('restaurante_id', '=', 1)->where('semana', '=', 1)->get();

//$records = Bigtabledata::comprasDoMes(1, 10);
//Recupera as compras realizadas pelo nutricionista (user_id) logado, do restaurante que este é responsável (restaurante_id) no mês determinado (mes)


//$record = collect($records);
//echo $record->count();
//echo count($records);
//dd($records[0]->data_ini);
//$qtdvaloresretornados = count($records);
//echo $qtdvaloresretornados;
//$mesini = Str::substr($records[0]->data_ini, 5, 2);
//echo $mesini;
//echo (int)$mesatual;
//$mesa = "01";
//echo (int)$mesa;

// Dados evolução de compras Normal x AF mês a mês
// especificando por uma regional
// $records = DB::select(DB::raw('SELECT produto_id, data_ini, SUM(IF(af = "sim", precototal, 0)) AS totalcompraaf, SUM(IF(af = "nao", precototal, 0)) AS totalcompranormal FROM bigtable_data WHERE produto_id = 1 AND MONTH(data_ini) = 11 AND produto_id = 1 AND YEAR(data_ini) = 2022 GROUP by produto_id, semana_nome ORDER BY semana ASC, mdprcnorm ASC, mdprcaf ASC'));



==============================================================================
MODELOS E MIGRATIONS QUE NÃO OBEDECEM O PADRÃO DO PLURAL DOS NOMES DAS TABELAS
==============================================================================
1 - Crie a migration regionais com o comando abaixo:
    php artisan make:migration create_regionais_table (irá criar a tabela regionais)

2 - Na migration da tabela cidades, que depende de regionais crie a chave estrangeira como segue:
    ...
    $table->foreignId('regional_id')->constrained('regionais')->onDelete('cascade');
    ...
    Explicando
    Irá criar o campo regional_id na tabela cidade referenciando a tabela 'regionais'.
    Houve a necessidde de explicitar o nome da tabela relacionada dentro da função contrained('regionais'),
    visto que o laravel esperava uma tabela com o nome 'regionals' que é o plural de regional, como essa
    tabela não existe e sim a tabela 'regionais' é necessário indicar seu nome na função constrained().

3 - No modelo Regional (criado com o comando: php artisan make:model Regional) tem-se que indicar o nome
    da tabela a que esse modelo faz referẽncia com a variável protected $table, já que o Laravel mais uma vez
    esperava uma tabela com o nome 'regionals' e não 'regionais' como foi criado pela migration acima.
    class Regional extends Model
    {
        use HasFactory;

        protected $table = "regionais";
    }


==============================
ETAPAS CRIAÇÃO DE TOKEN GITHUB
==============================
Menu Profile
	Settings

Menu Esquerdo
	Developer Settings
		Personal access tokens
			Tokens (classic)
				botão Delete - clicar
					Janela - I undestand - confirmar
				botao Generate new token (classic) - clicar
				Campo NOTE (digitar um nome)
				Expiration 30 Days
				Clicar no checkbox "Repo"
				Clicar no botao Generate Toke (Parte de baixo)
				Copiar o token gerando em uma área segura

pwd
git branch
git status
git git add .
git commit -m "Mensagem para registrar"
git push orign master (para github) ou
git push seati master (para gitlab)
username for 'https://...'
password for 'https://...'



=============================
TABELA ESTATÍSTICAS ou VIEWS
============================
1 - Crio uma tabela estatisticas com seu respectivo modelo, cujos dados serão salvos/atualizados
    sempre que houver adição/alteção de uma compra no estilo com compra_produto onde deverá constar os seguintes campos:
    id;
    id_compra; id_produto, quantidade, medida_id, detalhe, preco, af, precototal,
    semana_num, semana_desc, mes_num, mes_desc, data_ini, data_fin, valor, valoraf, valortotal,
    regional_id, nome_regional, municipio_id, nome_municipio_, bairro_id, nome_bairro,
    empresa_id, nome_fantasia, nutricionista_id, nome_nutricionista, user_id, nome_user,
    restaurante_id, identificacao,

How I know whats records ware deleted with function sync in the laravel


No model Compra  criar outro relacionamento do tipo muitos para muitos com seus respecitov campos pivot como abaixo:

public function alldatasCompras()
{
    return $this->belongsToMany(Produto::class, 'bigtable_data')->withPivot([
        'id',
        'compra_id', 'produto_id', 'quantidade', 'medida_id', 'detalhe', 'preco', 'af', 'precototal',
        'produto_nome', 'medida_nome', 'medida_simbolo',
        'semana_id', 'semana_nome', 'mes_id', 'mes_nome', 'data_ini', 'data_fin', 'valor', 'valor_af', 'valortotal',
        'categoria_id', 'categoria_nome', 'restaurante_id', 'identificacao',
        'regional_id', 'regional_nome', 'municipio_id', 'municipio_nome', 'bairro_id', 'bairro_nome',
        'empresa_id', 'razaosocial', 'nomefantasia', 'cnpj',
        'nutricionista_id', 'nutricionista_nomecompleto', 'nutricionista_cpf', nutricionista_crn', 'nutricionista_emp_id',
        'user_id', 'user_nomecompleto', 'user_cpf', 'user_crn'
        'restaurante_id', 'identificacao'
    ])->withTimestamps();

}



//Recupera todos os nutricionistas cujo que estejamm ativo, apenas os campos id e nomecompleto
$nutricionistas = Nutricionista::select('id', 'nomecompleto')->where('ativo', '=', '1')->orderBy('nomecompleto', 'ASC')->get();
$nutricionistasAlocadosRestaurante =  Restaurante::select('nutricionista_id')->get();
$nutricionistas = $nutricionistas->diff(Nutricionista::whereIn('id', $nutricionistasAlocadosRestaurante)->get());


na view index de empresas
<tr><td>{{ $empresa->restaurantes[0]->identificacao }}</td></tr>


//POSSÍVEL SOLUÇÃO PARA ANO DE PESQUISA SER A PARTIR DO ANO DE PRODUÇÃO
$anoproducao = 2022;
$anospesquisa = [];
for($ano = 0; $ano <= $anoproducao; $ano ++){
    $anospesquisa[] = $anoproducao - $ano;
}










==================
QUERYS
==================
$records = Bigtabledata::groupBy('produto_nome')
    ->where('restaurante_id', '=', $restaurante_id)
    ->whereMonth('data_ini', $mes_id)
    ->whereYear('data_ini',  $ano_id)
    ->get()->sum('precototal');


            /*
            Account::where('th_comp_code', auth()->user()->company)
            ->groupBy('th_exp_cat_id')
            ->selectRaw('*, sum(th_bill_amt)')->get();
            */

            /*
            $records = DB::table('bigtable_data')
                            ->where('restaurante_id', '=', $restaurante_id)
                            ->whereMonth('data_ini', $mes_id)
                            ->whereYear('data_ini', $ano_id)
                            ->select('identificacao', 'produto_nome')
                            ->get();
            */

            /*
            $records = DB::table('bigtable_data')
                            ->where('restaurante_id', '=', $restaurante_id)
                            ->whereMonth('data_ini', $mes_id)
                            ->whereYear('data_ini', $ano_id)
                            ->pluck('identificacao', 'produto_nome');
            */


            /*
            $records = DB::table('bigtable_data')
                            ->where('restaurante_id', '=', $restaurante_id)
                            ->whereMonth('data_ini', $mes_id)
                            ->whereYear('data_ini', $ano_id)
                            ->select('identificacao', 'produto_nome', 'precototal')
                            ->get();
            */

            /* $records = DB::table('bigtable_data')
                ->where('restaurante_id', '=', $restaurante_id)
                ->whereMonth('data_ini', $mes_id)
                ->whereYear('data_ini', $ano_id)
                ->get(); */


$records = Bigtabledata::where('restaurante_id', '=', $restaurante_id)
                                    ->whereMonth('data_ini', $mes_id)
                                    ->whereYear('data_ini',  $ano_id)
                                    ->select('identificacao')
                                    ->get()
                                    //->sum('precototal');
                                    ->groupBy('produto_nome');


======================================
POLICES E GATES - PERMISSÃO DE ACESSO
=====================================
1 - No arquivo /home/marcio/projetoslaravel/sedes-rest-popular/app/Providers/AuthServiceProvider.php importar a classe abaixo
    use Illuminate\Auth\Access\Response;

2 - Alterar o método boot(), como descrito abaixo:
    public function boot()
    {
        $this->registerPolicies();


        /*
        // Utilizadas com allows (ou seja, não define mensagem de lancamento de exceção)
        Gate::define('adm', function($user){
            return $user->perfil == 'adm';
        });

        Gate::define('ope', function($user){
            return $user->perfil == 'ope';
        });
        */


        // Utilizadas com authorize. (ou seja, define mensagem de lançamento de exceção)
        // É necesspario importar a classe: use Illuminate\Auth\Access\Response;
        Gate::define('adm', function($user){
            return $user->perfil == 'adm'
                    ? Response::allow()
                    : Response::deny('Ação não autorizada!');
        });

        Gate::define('nut', function($user){
            return $user->perfil == 'nut';

        });
    }

3 - Para executar ou não algum método que o usuário tenha permissão dependendo de seu perfil (adm ou nut), envolva todo o
    código dentro de uma condição IF, como descrito abaixo. Por exemplo, supondo que o usuário com
    com o perfil "nut" não tenha permissão de listar (método index) EMPRESAS.
    a) No controller EmpresaController importe a classe abaixo:
        a.1)    use Illuminate\Support\Facades\Gate;
    b) Envolver todo o corpo do método index da classe EmpresaController, com a verificação do perfil do usuário


4 - Alternativamente, você pode acrescentar em seu middleware no final de cada rota no arquivo de rotas o diretiva can:adm, como
    demonstrado abaixo:
    4.1 Antes - Permissão apenas para quem estava autenticado
    //=============================================
    //ROTA DO DASHBOARD (SEM SER DO TIPO RESOURCE)
    //=============================================
    // Dashboard
    Route::get('dashboard', [DashboardController::class, 'index'])->name('admin.dashboard')->middleware(['auth']);

    4.2 Depois - Permissão para quem está autenticado e possui perfil de "adm"
    //=============================================
    //ROTA DO DASHBOARD (SEM SER DO TIPO RESOURCE)
    //=============================================
    // Dashboard
    Route::get('dashboard', [DashboardController::class, 'index'])->name('admin.dashboard')->middleware(['auth', 'can:adm']);


5 -  Alternativamente, inclua o método construtor como segue abaixo no inçio de cada Controller dependendo do perfil do usuário
    Este método parece ser o mais viável, visto que ao inves se colocar o parâmetro em cada rota, como descrito abaixo, coloca-se
    uma única vez no inicio de cada controller, reduzindo a digitação e posterior manutenção do código
    public function __construct()
    {
        //$this->middleware('auth', ['except' => ['index', 'show']]);
        $this->middleware(['auth', 'can:adm']);
    }





4 - Para Exibir/Ocultar determinadas partes de uma view no blade, utilize a DIRETIVA @can() @endcan, como descrito abaixo:
    No caso abaixo, o usuário que não é administrador, só "enxergará o Item de menu x
    @can("adm")
        <a href="route(rota_a)>Item de menu A</a>
        <a href="route(rota_b)>Item de menu B</a>
        <a href="route(rota_c)>Item de menu C</a>
        <a href="route(rota_d)>Item de menu D</a>
    @endcan
        <a href="route(rota_x)>Item de menu X</a>



=============================================
REGRAS DE VALIDAÇÃO PERSONALIZADAS CPF e CNPJ
=============================================
1 - Site de referência: https://codeanddeploy.com/blog/laravel/laravel-8-simple-custom-validation-rules-example?utm_source=pocket_saves

2 - Crie as requests
    Exemplo:
    php artisan make:request UserCreateRequest
    php artisan make:request UserUpdateRequest

3 - Coloque as requests criadas acima, nos devidos métodos dos controladores apropriados, onde será necessario validar os campos com validação customizada, além das outras validações default do laravel
    Exemplo:
    No controller UserController no método store, update etc...
    public function store(UserCreateRequest $request)
    public function update(UserUpdateRequest $request)


4 - Crie as regras de validação customizadas
    Exemplo:
    php artisan make:rule CpfValidateRule

5 - Nas regra de validação customizada, criada acima, edite os métodos abaixo:
    --------
    PARA CPF
    --------
    public function passes($attribute, $value)
    {
        // Atribuindo à variável cpf o valor recebido
        $cpf = $value;

        // Extrai somente os números
        $cpf = preg_replace( '/[^0-9]/is', '', $cpf );

        // Verifica se foi informado todos os digitos corretamente
        if (strlen($cpf) != 11) {
            return false;
        }

        // Verifica se foi informada uma sequência de digitos repetidos. Ex: 111.111.111-11
        if (preg_match('/(\d)\1{10}/', $cpf)) {
            return false;
        }

        // Faz o calculo para validar o CPF
        for ($t = 9; $t < 11; $t++) {
            for ($d = 0, $c = 0; $c < $t; $c++) {
                $d += $cpf[$c] * (($t + 1) - $c);
            }
            $d = ((10 * $d) % 11) % 10;
            if ($cpf[$c] != $d) {
                return false;
            }
        }
        return true;
    }


    public function message()
    {
        return 'CPF inválido';
    }

    ----------
    PARA CNPJ
    ----------
    public function passes($attribute, $value)
    {
        // Atribuindo à variável cnpj o valor recebido
        $cnpj = $value;

        $cnpj = preg_replace('/[^0-9]/', '', (string) $cnpj);

        // Valida tamanho
        if (strlen($cnpj) != 14)
            return false;

        // Verifica se todos os digitos são iguais
        if (preg_match('/(\d)\1{13}/', $cnpj))
            return false;

        // Valida primeiro dígito verificador
        for ($i = 0, $j = 5, $soma = 0; $i < 12; $i++)
        {
            $soma += $cnpj[$i] * $j;
            $j = ($j == 2) ? 9 : $j - 1;
        }

        $resto = $soma % 11;

        if ($cnpj[12] != ($resto < 2 ? 0 : 11 - $resto))
            return false;

        // Valida segundo dígito verificador
        for ($i = 0, $j = 6, $soma = 0; $i < 13; $i++)
        {
            $soma += $cnpj[$i] * $j;
            $j = ($j == 2) ? 9 : $j - 1;
        }

        $resto = $soma % 11;

        return $cnpj[13] == ($resto < 2 ? 0 : 11 - $resto);
    }


    public function message()
    {
        return 'CNPJ inválido.';
    }

6 - Invoque a regra de validação customizada criada no passo "4" nas request criadas no passo "2", e modifique os métodos conforme abaixo:
    Em UserCreateRequest e UserUpdateRequest
    invoque: use App\Rules\CpfValidateRule;

    modifique o método rules
        public function rules()
        {
            return [
                'nomecompleto'          => 'bail|required|string',
                'cpf'                   => ['bail', 'required', 'unique:users,cpf', new CpfValidateRule()],    // Com regra de validação de CPF customizada,
                'crn'                   => 'required_if:perfil,"nut"',  // campo requerido se perfil for do tipo "nut"
                'telefone'              => 'required',
                'name'                  => 'bail|required|string',  // é o campo usuário
                'email'                 => 'bail|required|string|email|unique:users,email',
                'municipio_id'          => 'bail|required',
                'perfil'                => 'bail|required',
                'password'              => 'bail|required|confirmed',
                'password_confirmation' => 'bail|required'
            ];
        }


======================
INSTALANDO A APLICAÇÃO
======================
20 - Instalando:
   criar banco no MySQL
   sedes_restaurante do tipo: utf8mb4_unicode_ci)
    No terminal
    Habilitar permissão de pasta 755
    Fazer copia do arquivo .env.example com
cp .env.example ./.env
    Criar chave (se necessário)
     php artisan Key:generate
    Configurar variáveis de ambiente:
     APP_DEBUG = false
     APP_URL=http://localhost
     FILESYSTEM_DRIVER=public
     Credenciais do banco criado

      git clone (endereço repositório)
      compose install ou update
      php artisan migrate
      php artisan db:seed
        OU php artisan migrate:fresh --seed (para zerar todas as tabelas do banco e começar tudo outra vez)
      php artisan dump-autolad
      php artisan storage-link
      php artisan clear-cache
      php artisan migrate:rollback --step=5
      Sempre que modificar .env, executar: php artisan config:clear
      No arquivo config/database.php, na chave 'mysql' alterar a propriedade  'strict' => de true para false (isso corrige problemas de groupBy nas consultas)


========================================================================================
QUERY COM RESULTADO SIMPLES (Só o id e o nome das regionais sem categorização mês a mês)
=======================================================================================
            $regionais = DB::table("bigtable_data")
            ->select(DB::RAW('regional_id AS id, regional_nome AS regional'))
            ->groupBy('regional_id')
            ->orderBy($columnName,$columnSortOrder)
            ->skip($start)
            ->take($rowperpage)
            ->get();


========================
SUB QUERYS NO MySQL
=======================
// Traz todas as regionais com seus respectivos valores de compra mês a mês (jan a dez) de um determinado ano por categorizados por compra normal e af(agricultura famiiar)
SELECT
	regional_id,
    regional_nome,
    SUM(jannormal), SUM(janaf), SUM(fevnormal), SUM(fevaf), SUM(marnormal), SUM(maraf), SUM(abrnormal), SUM(abraf), SUM(mainormal), SUM(maiaf), SUM(junnormal), SUM(junaf),
    SUM(julnormal), SUM(julaf), SUM(agsnormal), SUM(agsaf), SUM(setnormal), SUM(setaf), SUM(outnormal), SUM(outaf), SUM(novnormal), SUM(novaf), SUM(deznormal), SUM(dezaf)
FROM
	(
        SELECT
        	data_ini,
        	af,
        	precototal,
        	regional_id, regional_nome,

            SUM(IF(MONTH(data_ini) = 01 AND af = "nao", precototal, 0.00)) AS jannormal,
            SUM(IF(MONTH(data_ini) = 01 AND af = "sim", precototal, 0.00)) AS janaf,

            SUM(IF(MONTH(data_ini) = 02 AND af = "nao", precototal, 0.00)) AS fevnormal,
            SUM(IF(MONTH(data_ini) = 02 AND af = "sim", precototal, 0.00)) AS fevaf,

            SUM(IF(MONTH(data_ini) = 03 AND af = "nao", precototal, 0.00)) AS marnormal,
            SUM(IF(MONTH(data_ini) = 03 AND af = "sim", precototal, 0.00)) AS maraf,

            SUM(IF(MONTH(data_ini) = 04 AND af = "nao", precototal, 0.00)) AS abrnormal,
            SUM(IF(MONTH(data_ini) = 04 AND af = "sim", precototal, 0.00)) AS abraf,

            SUM(IF(MONTH(data_ini) = 05 AND af = "nao", precototal, 0.00)) AS mainormal,
            SUM(IF(MONTH(data_ini) = 05 AND af = "sim", precototal, 0.00)) AS maiaf,

            SUM(IF(MONTH(data_ini) = 06 AND af = "nao", precototal, 0.00)) AS junnormal,
            SUM(IF(MONTH(data_ini) = 06 AND af = "sim", precototal, 0.00)) AS junaf,

            SUM(IF(MONTH(data_ini) = 07 AND af = "nao", precototal, 0.00)) AS julnormal,
            SUM(IF(MONTH(data_ini) = 07 AND af = "sim", precototal, 0.00)) AS julaf,

            SUM(IF(MONTH(data_ini) = 08 AND af = "nao", precototal, 0.00)) AS agsnormal,
            SUM(IF(MONTH(data_ini) = 08 AND af = "sim", precototal, 0.00)) AS agsaf,

            SUM(IF(MONTH(data_ini) = 09 AND af = "nao", precototal, 0.00)) AS setnormal,
            SUM(IF(MONTH(data_ini) = 09 AND af = "sim", precototal, 0.00)) AS setaf,

            SUM(IF(MONTH(data_ini) = 10 AND af = "nao", precototal, 0.00)) AS outnormal,
            SUM(IF(MONTH(data_ini) = 10 AND af = "sim", precototal, 0.00)) AS outaf,

            SUM(IF(MONTH(data_ini) = 11 AND af = "nao", precototal, 0.00)) AS novnormal,
            SUM(IF(MONTH(data_ini) = 11 AND af = "sim", precototal, 0.00)) AS novaf,

            SUM(IF(MONTH(data_ini) = 12 AND af = "nao", precototal, 0.00)) AS deznormal,
            SUM(IF(MONTH(data_ini) = 12 AND af = "sim", precototal, 0.00)) AS dezaf
        FROM
        	bigtable_data
        WHERE
        	YEAR(data_ini) = 2023
        GROUP BY regional_id, MONTH(data_ini)
        ORDER BY regional_nome
    ) AS valoresmeses
WHERE YEAR(data_ini) = 2023
GROUP BY regional_id;

==========================
TRABALHANDO COM DATATABLE
==========================
/*
// Obtendo os dados de uma linha que foi clicada
oTable.on( 'click', 'tbody tr', function () {
    console.log( oTable.row( this ).data());                // Todos os dados da linha atual
    console.log( oTable.row( this ).data().id);             // Só o id da linha atual
    console.log( oTable.row( this ).data().nomeentidade);   // Só o nomedaentidade da linha atual
    console.log( oTable.row( this ).data().fevaf);          // Um valor específico da linha atual

    console.log( oTable.row( 0 ).data() );                  // Todos os dados da linha de índice 0
    console.log( oTable.row( 0 ).data().id);                // Só o id da linha de índice 0
    console.log( oTable.row( 3 ).data().nomeentidade);      // Só o nomedaentidade da linha de índice 3
});
*/

=========================================================
DESTAQUE DE LINHAS E COLUNAS SIMULTANEAMENTE NO DATATABLE
=========================================================
// Este estilo tem que está localizado no início do arquivo: templateadmin.blade.php entre as tags <head></head>
<!-- Style personalizado para destaque de linhas e colunas simultaneamente além do link do CSS Hover e HIGHLIGHT acima -->
<style>
    td.highlight {
        background-color: whitesmoke !important;
    }

    html.dark td.highlight {
        background-color: rgba(var(--dt-row-hover), 0.082) !important;
    }
</style>


/*
// Deve está na página onde possui datable
// Script para destaque de linha e coluna simultaneamente com hover.
// Necessita do style personalizado no início do templateadmin.blade.php
// É necessário que sempre retorne dados, caso contrário, cauxa erro, ou seja,
// dataJSON.iTotalRecords sempre deverá ser maior que zero. (dataJSON.iTotalRecords > 0)
oTable.on('mouseenter', 'tbody tr td', function () {
    let colIdx = oTable.cell(this).index().column;
    oTable
        .cells()
        .nodes()
        .each((el) => el.classList.remove('highlight'));

    oTable
        .column(colIdx)
        .nodes()
        .each((el) => el.classList.add('highlight'));
});
*/



================================
TEMPLATEADMIN.BLADE.PHP ORIGINAL
================================
{{--
<!DOCTYPE html>
<html lang="pt-br">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SEDES - Restaurante Popular</title>

    <!-- Custom fonts for this template-->
    <link href="{{asset('template/vendor/fontawesome-free/css/all.min.css')}}" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Estilos css persolanizados próprios-->
    <link href="{{asset('mrccustom/css/mystyles.css')}}" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="{{asset('template/css/sb-admin-2.min.css')}}" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="{{asset('template/vendor/datatables/dataTables.bootstrap4.min.css')}}" rel="stylesheet">

    <!-- Styles personalizado para fixação de colunas e cabeçalhos em um datatable. Opera com a extensão javascript abaixo -->
    <link href="https://cdn.datatables.net/fixedcolumns/4.3.0/css/fixedColumns.dataTables.min.css" rel="stylesheet">

    <!-- Styles personalizado para HOVER e HIGHLIGHT BLUE(destaque de linha na cor azul)-->
    <link href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css" rel="stylesheet">

    <!-- Style personalizado para destaque de linhas e colunas simultaneamente além do link do CSS Hover e HIGHLIGHT acima -->
    <style>
        td.highlight {
            background-color: whitesmoke !important;
        }

        html.dark td.highlight {
            background-color: rgba(var(--dt-row-hover), 0.082) !important;
        }
    </style>

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- SideBar -->
        @include('template.sidebar')
        <!-- / End of SideBar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                @include('template.topbar', ['search' => false])
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                @yield('content-page')
                <!-- End of Page Content -->

            </div>
            <!-- End of Main Content -->

            <!-- Footer -->
            @include('template.footer')
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="rounded scroll-to-top" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>


    <!-- Bootstrap core JavaScript-->
    <script src="{{asset('template/vendor/jquery/jquery.min.js')}}"></script>
    <script src="{{asset('template/vendor/bootstrap/js/bootstrap.bundle.min.js')}}"></script>

    <!-- Core plugin JavaScript-->
    <script src="{{asset('template/vendor/jquery-easing/jquery.easing.min.js')}}"></script>

    <!-- Custom scripts for all pages-->
    <script src="{{asset('template/js/sb-admin-2.min.js')}}"></script>

    <!-- Page level plugins -->
    {{-- <script src="{{asset('template/vendor/chart.js/Chart.min.js')}}"></script> --}}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <!-- Page level custom scripts -->
    {{-- <script src="{{asset('template/js/demo/chart-area-demo.js')}}"></script>
    <script src="{{asset('template/js/demo/chart-pie-demo.js')}}"></script> --}}

    <!-- Page level plugins -->
    <script src="{{asset('template/vendor/datatables/jquery.dataTables.min.js')}}"></script>
    <script src="{{asset('template/vendor/datatables/dataTables.bootstrap4.min.js')}}"></script>

    <!-- INICIO BUTTONS PARA SEREM EXIBIDOS NOS DATATABLES-->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css">
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>
    <!-- FIM BUTTONS PARA SEREM EXIBIDOS NOS DATATABLES-->

    <!-- INICIO HOVER e HIGHLIGHT BLUE(destaque de linha na cor azul) -->
    <script src="https://code.jquery.com/jquery-3.7.0.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <!-- FIM HOVER -->

    <!-- Extensão javascript para fixação de colunas e cabeçalhos no DataTables. Opera em conjunto com o css acima -->
    <script src="https://cdn.datatables.net/fixedcolumns/4.3.0/js/dataTables.fixedColumns.min.js"></script>

    <!--Plugin jQuery para máscaras de campos -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.11/jquery.mask.min.js"></script>


    <!-- Scripts Customizados, criados por mim mesmo ou para configuração de outras bibliotecas e plugins -->
    <script src="{{asset('template/js/customized/myscripts.js')}}"></script>

    <!-- Page level custom scripts -->
    <!-- Talvez a invocação desse script abaixo não seja necessário -->
    <script src="{{asset('template/js/demo/datatables-demo.js')}}"></script>


    <!-- Scripts a serem colocados no final do Conteúdo das páginas quando necessário -->
    @yield('scripts')


</body>

</html>


===================================================================================================
ORDENAÇÃO DAS COLUNAS POR TOTAL NORMAL, TOTAL AF, TOTAL GERAL, PERCENTAGEM NORMAL E PERCENTAGEM AF
===================================================================================================
// Monitor Compras Mensais por Regionais
public function ajaxgetRegionaisComprasMensais(Request $request){

    ## Read value
    $draw = $request->get('draw');
    $start = $request->get("start");
    $rowperpage = $request->get("length"); // Rows display per page

    $columnIndex_arr = $request->get('order');
    $columnName_arr = $request->get('columns');
    $order_arr = $request->get('order');
    $search_arr = $request->get('search');

    $columnIndex = $columnIndex_arr[0]['column']; // Column index
    $columnName = $columnName_arr[$columnIndex]['data']; // Column name
    $columnSortOrder = $order_arr[0]['dir']; // asc or desc
    $searchValue = $search_arr['value']; // Search value


    //dd($request);
    // Obtendo o ano de referência (ano atual)
    // $anoRef = date("Y");
    $anoRef =  $request->periodo;

    // Obtendo o total de registros de acordo com os critérios de pesquia (fitro)
    $totalRecords = DB::table("bigtable_data")->select('regional_id')->whereYear("data_ini", "=",  $anoRef)->distinct('regional_id')->count();
    $totalRecordswithFilter =  DB::table('bigtable_data')
    ->select("count(*) as allcount")
    ->whereYear("data_ini", "=",  $anoRef)
    ->distinct('bigtable_data.regional_id')
    ->where('bigtable_data.regional_nome', 'like', '%' .$searchValue . '%')
    ->count();

    // Obtendo os valores das compras por mês (1 a 12), se da agricultura familiar ou não (normal ou af) no ano de referência
    // por meio de SUBQUERY utilizando a mesma tabela (bigtable_data) através do "joinSub"
    $valoresmeses = DB::table('bigtable_data')
    ->select(DB::RAW("data_ini, af, precototal, regional_id, regional_nome,
            SUM(IF(MONTH(data_ini) = 01 AND af = 'nao', precototal, 0.00)) AS mesjannormal,
            SUM(IF(MONTH(data_ini) = 01 AND af = 'sim', precototal, 0.00)) AS mesjanaf,
            SUM(IF(MONTH(data_ini) = 02 AND af = 'nao', precototal, 0.00)) AS mesfevnormal,
            SUM(IF(MONTH(data_ini) = 02 AND af = 'sim', precototal, 0.00)) AS mesfevaf,
            SUM(IF(MONTH(data_ini) = 03 AND af = 'nao', precototal, 0.00)) AS mesmarnormal,
            SUM(IF(MONTH(data_ini) = 03 AND af = 'sim', precototal, 0.00)) AS mesmaraf,
            SUM(IF(MONTH(data_ini) = 04 AND af = 'nao', precototal, 0.00)) AS mesabrnormal,
            SUM(IF(MONTH(data_ini) = 04 AND af = 'sim', precototal, 0.00)) AS mesabraf,
            SUM(IF(MONTH(data_ini) = 05 AND af = 'nao', precototal, 0.00)) AS mesmainormal,
            SUM(IF(MONTH(data_ini) = 05 AND af = 'sim', precototal, 0.00)) AS mesmaiaf,
            SUM(IF(MONTH(data_ini) = 06 AND af = 'nao', precototal, 0.00)) AS mesjunnormal,
            SUM(IF(MONTH(data_ini) = 06 AND af = 'sim', precototal, 0.00)) AS mesjunaf,
            SUM(IF(MONTH(data_ini) = 07 AND af = 'nao', precototal, 0.00)) AS mesjulnormal,
            SUM(IF(MONTH(data_ini) = 07 AND af = 'sim', precototal, 0.00)) AS mesjulaf,
            SUM(IF(MONTH(data_ini) = 08 AND af = 'nao', precototal, 0.00)) AS mesagsnormal,
            SUM(IF(MONTH(data_ini) = 08 AND af = 'sim', precototal, 0.00)) AS mesagsaf,
            SUM(IF(MONTH(data_ini) = 09 AND af = 'nao', precototal, 0.00)) AS messetnormal,
            SUM(IF(MONTH(data_ini) = 09 AND af = 'sim', precototal, 0.00)) AS messetaf,
            SUM(IF(MONTH(data_ini) = 10 AND af = 'nao', precototal, 0.00)) AS mesoutnormal,
            SUM(IF(MONTH(data_ini) = 10 AND af = 'sim', precototal, 0.00)) AS mesoutaf,
            SUM(IF(MONTH(data_ini) = 11 AND af = 'nao', precototal, 0.00)) AS mesnovnormal,
            SUM(IF(MONTH(data_ini) = 11 AND af = 'sim', precototal, 0.00)) AS mesnovaf,
            SUM(IF(MONTH(data_ini) = 12 AND af = 'nao', precototal, 0.00)) AS mesdeznormal,
            SUM(IF(MONTH(data_ini) = 12 AND af = 'sim', precototal, 0.00)) AS mesdezaf",

        )
    )
    ->whereYear("data_ini", "=",  $anoRef)
    ->groupByRaw("regional_id")
    ->orderByRaw("regional_nome");


    $records =  DB::table('bigtable_data')->joinSub($valoresmeses, 'aliasValoresMeses', function($join){
    $join->on('bigtable_data.regional_id', '=', 'aliasValoresMeses.regional_id');
    })->select(DB::raw("bigtable_data.regional_id AS id, bigtable_data.regional_nome AS nomeentidade, bigtable_data.data_ini,
                    aliasValoresMeses.mesjannormal AS jannormal, aliasValoresMeses.mesjanaf AS janaf, aliasValoresMeses.mesfevnormal AS fevnormal, aliasValoresMeses.mesfevaf AS fevaf, aliasValoresMeses.mesmarnormal AS marnormal, aliasValoresMeses.mesmaraf AS maraf,
                    aliasValoresMeses.mesabrnormal AS abrnormal, aliasValoresMeses.mesabraf AS abraf, aliasValoresMeses.mesmainormal AS mainormal, aliasValoresMeses.mesmaiaf AS maiaf, aliasValoresMeses.mesjunnormal AS junnormal, aliasValoresMeses.mesjunaf AS junaf,
                    aliasValoresMeses.mesjulnormal AS julnormal, aliasValoresMeses.mesjulaf AS julaf, aliasValoresMeses.mesagsnormal AS agsnormal, aliasValoresMeses.mesagsaf AS agsaf, aliasValoresMeses.messetnormal AS setnormal, aliasValoresMeses.messetaf AS setaf,
                    aliasValoresMeses.mesoutnormal AS outnormal, aliasValoresMeses.mesoutaf AS outaf, aliasValoresMeses.mesnovnormal AS novnormal, aliasValoresMeses.mesnovaf AS novaf, aliasValoresMeses.mesdeznormal AS deznormal, aliasValoresMeses.mesdezaf AS dezaf,

                    (aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal ) AS totalnormal,
                    (aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf ) AS totalaf,
                    ((aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal) + (aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf)) AS totalgeral,

                    IF((aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal + aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf) <> 0, (aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal) * 100 / (aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal + aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf), 0 ) AS percentagemnormal,
                    IF((aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal + aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf) <> 0, (aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf) * 100 / (aliasValoresMeses.mesjannormal + aliasValoresMeses.mesfevnormal + aliasValoresMeses.mesmarnormal + aliasValoresMeses.mesabrnormal + aliasValoresMeses.mesmainormal + aliasValoresMeses.mesjunnormal + aliasValoresMeses.mesjulnormal + aliasValoresMeses.mesagsnormal + aliasValoresMeses.messetnormal + aliasValoresMeses.mesoutnormal + aliasValoresMeses.mesnovnormal + aliasValoresMeses.mesdeznormal + aliasValoresMeses.mesjanaf + aliasValoresMeses.mesfevaf + aliasValoresMeses.mesmaraf + aliasValoresMeses.mesabraf + aliasValoresMeses.mesmaiaf + aliasValoresMeses.mesjunaf + aliasValoresMeses.mesjulaf + aliasValoresMeses.mesagsaf + aliasValoresMeses.messetaf + aliasValoresMeses.mesoutaf + aliasValoresMeses.mesnovaf + aliasValoresMeses.mesdezaf), 0 ) AS percentagemaf"
                )
    )
    ->whereYear("bigtable_data.data_ini", "=",  $anoRef)
    ->where('bigtable_data.regional_nome', 'like', '%' .$searchValue . '%')
    ->groupBy("bigtable_data.regional_id")
    //->orderBy("bigtable_data.regional_nome")
    ->orderBy($columnName,$columnSortOrder)
    ->skip($start)
    ->take($rowperpage)
    ->get();

    $data_arr = array();

    //__$linhatotalnormal = 0;
    //__$linhatotalaf = 0;
    //__$linhatotalgeral = 0;
    //__$linhapercentagemnormal = 0;
    //__$linhapercentagemaf = 0;
    //__$calculopercentagemnormal = 0;
    //__$calculopercentagemaf = 0;

    foreach($records as $record){
        // Transformando o valor retornado em float e aplicando a a formatação decimal.
        $id = $record->id;
        $nomeentidade =  $record->nomeentidade;
        $jannormal = number_format(floatval($record->jannormal), 2, ",", ".");
        $janaf = number_format(floatval($record->janaf), 2, ",", ".");
        $fevnormal = number_format(floatval($record->fevnormal), 2, ",", ".");
        $fevaf = number_format(floatval($record->fevaf), 2, ",", ".");
        $marnormal = number_format(floatval($record->marnormal), 2, ",", ".");
        $maraf = number_format(floatval($record->maraf), 2, ",", ".");
        $abrnormal = number_format(floatval($record->abrnormal), 2, ",", ".");
        $abraf = number_format(floatval($record->abraf), 2, ",", ".");
        $mainormal = number_format(floatval($record->mainormal), 2, ",", ".");
        $maiaf = number_format(floatval($record->maiaf), 2, ",", ".");
        $junnormal = number_format(floatval($record->junnormal), 2, ",", ".");
        $junaf = number_format(floatval($record->junaf), 2, ",", ".");
        $julnormal = number_format(floatval($record->julnormal), 2, ",", ".");
        $julaf = number_format(floatval($record->julaf), 2, ",", ".");
        $agsnormal = number_format(floatval($record->agsnormal), 2, ",", ".");
        $agsaf = number_format(floatval($record->agsaf), 2, ",", ".");
        $setnormal = number_format(floatval($record->setnormal), 2, ",", ".");
        $setaf = number_format(floatval($record->setaf), 2, ",", ".");
        $outnormal = number_format(floatval($record->outnormal), 2, ",", ".");
        $outaf = number_format(floatval($record->outaf), 2, ",", ".");
        $novnormal = number_format(floatval($record->novnormal), 2, ",", ".");
        $novaf = number_format(floatval($record->novaf), 2, ",", ".");
        $deznormal = number_format(floatval($record->deznormal), 2, ",", ".");
        $dezaf = number_format(floatval($record->dezaf), 2, ",", ".");

        $totalnormal = number_format(floatval($record->totalnormal), 2, ",", ".");
        $totalaf = number_format(floatval($record->totalaf), 2, ",", ".");
        $totalgeral = number_format(floatval($record->totalgeral), 2, ",", ".");
        $percentagemnormal = number_format(floatval($record->percentagemnormal), 2, ",", ".");
        $percentagemaf = number_format(floatval($record->percentagemaf), 2, ",", ".");



        //Soma dos valores normal e af de cada (linha)
        //__$linhatotalnormal = floatval($record->jannormal) + floatval($record->fevnormal) + floatval($record->marnormal) + floatval($record->abrnormal) + floatval($record->mainormal) + floatval($record->junnormal) + floatval($record->julnormal) + floatval($record->agsnormal) + floatval($record->setnormal) + floatval($record->outnormal) + floatval($record->novnormal) + floatval($record->deznormal);
        //__$linhatotalaf = floatval($record->janaf) + floatval($record->fevaf) + floatval($record->maraf) + floatval($record->abraf) + floatval($record->maiaf) + floatval($record->junaf) + floatval($record->julaf) + floatval($record->agsaf) + floatval($record->setaf) + floatval($record->outaf) + floatval($record->novaf) + floatval($record->dezaf);

        //Soma geral(total normal mais total af) de cada regional (linha)
        //__$linhatotalgeral = $linhatotalnormal + $linhatotalaf;

        //Calculando percentagem normal e af de cada regional (linha)
        //Evitando divisão por zero
        //__if($linhatotalgeral != 0){
        //__    $calculopercentagemnormal = (($linhatotalnormal * 100)/$linhatotalgeral);
        //__    $calculopercentagemaf = (($linhatotalaf * 100)/$linhatotalgeral);
        //__}else {
        //__    $calculopercentagemnormal = 0;
        //__    $calculopercentagemaf = 0;
        //__}



        //__$totalnormal = number_format($linhatotalnormal, 2, ",",".");
        //__$totalaf = number_format($linhatotalaf, 2, ",",".");
        //__$linhatotalgeral = number_format($linhatotalgeral, 2, ",",".");
        //__$linhapercentagemnormal = number_format($calculopercentagemnormal, 2, ",",".");
        //__$linhapercentagemaf = number_format($calculopercentagemaf, 2, ",", ".");


        $data_arr[] = array(
            "id"                => $id,
            "nomeentidade"      => $nomeentidade,
            "jannormal"         => $jannormal != '0,00' ? $jannormal : '',
            "janaf"             => $janaf != '0,00' ? $janaf : '',
            "fevnormal"         => $fevnormal != '0,00' ? $fevnormal : '',
            "fevaf"             => $fevaf != '0,00' ? $fevaf : '',
            "marnormal"         => $marnormal != '0,00' ? $marnormal : '',
            "maraf"             => $maraf != '0,00' ? $maraf : '',
            "abrnormal"         => $abrnormal != '0,00' ? $abrnormal : '',
            "abraf"             => $abraf != '0,00' ? $abraf : '',
            "mainormal"         => $mainormal != '0,00' ? $mainormal : '',
            "maiaf"             => $maiaf != '0,00' ? $maiaf : '',
            "junnormal"         => $junnormal != '0,00' ? $junnormal : '',
            "junaf"             => $junaf != '0,00' ? $junaf : '',
            "julnormal"         => $julnormal != '0,00' ? $julnormal : '',
            "julaf"             => $julaf != '0,00' ? $julaf : '',
            "agsnormal"         => $agsnormal != '0,00' ? $agsnormal : '',
            "agsaf"             => $agsaf != '0,00' ? $agsaf : '',
            "setnormal"         => $setnormal != '0,00' ? $setnormal : '',
            "setaf"             => $setaf != '0,00' ? $setaf : '',
            "outnormal"         => $outnormal != '0,00' ? $outnormal : '',
            "outaf"             => $outaf != '0,00' ? $outaf : '',
            "novnormal"         => $novnormal != '0,00' ? $novnormal : '',
            "novaf"             => $novaf != '0,00' ? $novaf : '',
            "deznormal"         => $deznormal != '0,00' ? $deznormal : '',
            "dezaf"             => $dezaf != '0,00' ? $dezaf : '',
            //__"totalnormal"       => $totalnormal != '0,00' ? $totalnormal : '',
            //__"totalaf"           => $totalaf != '0,00' ? $totalaf : '',
            //__"totalgeral"        => $linhatotalgeral != '0,00' ? $linhatotalgeral : '',
            //__"percentagemnormal" => $linhapercentagemnormal != '0,00' ? $linhapercentagemnormal : '',
            //__"percentagemaf"     => $linhapercentagemaf != '0,00' ? $linhapercentagemaf : '',
            "totalnormal"       => $totalnormal != '0,00' ? $totalnormal : '',
            "totalaf"           => $totalaf != '0,00' ? $totalaf : '',
            "totalgeral"        => $totalgeral != '0,00' ? $totalgeral : '',
            "percentagemnormal" => $percentagemnormal != '0,00' ? $percentagemnormal : '',
            "percentagemaf"     => $percentagemaf != '0,00' ? $percentagemaf : '',

        );
    }

    $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordswithFilter,
        "aaData" => $data_arr
    );

    echo json_encode($response);
    exit;
}




